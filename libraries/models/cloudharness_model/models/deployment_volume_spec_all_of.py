# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from cloudharness_model.models.base_model_ import Model
from cloudharness_model import util


class DeploymentVolumeSpecAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mountpath=None, size=None, usenfs=None):  # noqa: E501
        """DeploymentVolumeSpecAllOf - a model defined in OpenAPI

        :param mountpath: The mountpath of this DeploymentVolumeSpecAllOf.  # noqa: E501
        :type mountpath: str
        :param size: The size of this DeploymentVolumeSpecAllOf.  # noqa: E501
        :type size: object
        :param usenfs: The usenfs of this DeploymentVolumeSpecAllOf.  # noqa: E501
        :type usenfs: bool
        """
        self.openapi_types = {
            'mountpath': str,
            'size': object,
            'usenfs': bool
        }

        self.attribute_map = {
            'mountpath': 'mountpath',
            'size': 'size',
            'usenfs': 'usenfs'
        }

        self._mountpath = mountpath
        self._size = size
        self._usenfs = usenfs

    @classmethod
    def from_dict(cls, dikt) -> 'DeploymentVolumeSpecAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeploymentVolumeSpec_allOf of this DeploymentVolumeSpecAllOf.  # noqa: E501
        :rtype: DeploymentVolumeSpecAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mountpath(self):
        """Gets the mountpath of this DeploymentVolumeSpecAllOf.

        The mount path for the volume  # noqa: E501

        :return: The mountpath of this DeploymentVolumeSpecAllOf.
        :rtype: str
        """
        return self._mountpath

    @mountpath.setter
    def mountpath(self, mountpath):
        """Sets the mountpath of this DeploymentVolumeSpecAllOf.

        The mount path for the volume  # noqa: E501

        :param mountpath: The mountpath of this DeploymentVolumeSpecAllOf.
        :type mountpath: str
        """
        if mountpath is None:
            raise ValueError("Invalid value for `mountpath`, must not be `None`")  # noqa: E501

        self._mountpath = mountpath

    @property
    def size(self):
        """Gets the size of this DeploymentVolumeSpecAllOf.

        The volume size.   E.g. 5Gi  # noqa: E501

        :return: The size of this DeploymentVolumeSpecAllOf.
        :rtype: object
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this DeploymentVolumeSpecAllOf.

        The volume size.   E.g. 5Gi  # noqa: E501

        :param size: The size of this DeploymentVolumeSpecAllOf.
        :type size: object
        """

        self._size = size

    @property
    def usenfs(self):
        """Gets the usenfs of this DeploymentVolumeSpecAllOf.

        Set to `true` to use the nfs on the created volume and mount as ReadWriteMany.  # noqa: E501

        :return: The usenfs of this DeploymentVolumeSpecAllOf.
        :rtype: bool
        """
        return self._usenfs

    @usenfs.setter
    def usenfs(self, usenfs):
        """Sets the usenfs of this DeploymentVolumeSpecAllOf.

        Set to `true` to use the nfs on the created volume and mount as ReadWriteMany.  # noqa: E501

        :param usenfs: The usenfs of this DeploymentVolumeSpecAllOf.
        :type usenfs: bool
        """

        self._usenfs = usenfs
