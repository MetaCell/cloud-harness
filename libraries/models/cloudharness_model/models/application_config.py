from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from cloudharness_model.models.base_model import Model
from cloudharness_model.models.application_harness_config import ApplicationHarnessConfig
from cloudharness_model import util

from cloudharness_model.models.application_harness_config import ApplicationHarnessConfig  # noqa: E501

class ApplicationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, harness=None):  # noqa: E501
        """ApplicationConfig - a model defined in OpenAPI

        :param harness: The harness of this ApplicationConfig.  # noqa: E501
        :type harness: ApplicationHarnessConfig
        """
        self.openapi_types = {
            'harness': ApplicationHarnessConfig
        }

        self.attribute_map = {
            'harness': 'harness'
        }

        self._harness = harness

    @classmethod
    def from_dict(cls, dikt) -> 'ApplicationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ApplicationConfig of this ApplicationConfig.  # noqa: E501
        :rtype: ApplicationConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def harness(self) -> ApplicationHarnessConfig:
        """Gets the harness of this ApplicationConfig.


        :return: The harness of this ApplicationConfig.
        :rtype: ApplicationHarnessConfig
        """
        return self._harness

    @harness.setter
    def harness(self, harness: ApplicationHarnessConfig):
        """Sets the harness of this ApplicationConfig.


        :param harness: The harness of this ApplicationConfig.
        :type harness: ApplicationHarnessConfig
        """
        if harness is None:
            raise ValueError("Invalid value for `harness`, must not be `None`")  # noqa: E501

        self._harness = harness
