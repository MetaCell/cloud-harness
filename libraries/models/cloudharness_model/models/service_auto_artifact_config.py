# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from cloudharness_model.models.base_model_ import Model
from cloudharness_model import util


class ServiceAutoArtifactConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, port=None, auto=None, name=None):  # noqa: E501
        """ServiceAutoArtifactConfig - a model defined in OpenAPI

        :param port: The port of this ServiceAutoArtifactConfig.  # noqa: E501
        :type port: int
        :param auto: The auto of this ServiceAutoArtifactConfig.  # noqa: E501
        :type auto: bool
        :param name: The name of this ServiceAutoArtifactConfig.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {
            'port': int,
            'auto': bool,
            'name': str
        }

        self.attribute_map = {
            'port': 'port',
            'auto': 'auto',
            'name': 'name'
        }

        self._port = port
        self._auto = auto
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceAutoArtifactConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceAutoArtifactConfig of this ServiceAutoArtifactConfig.  # noqa: E501
        :rtype: ServiceAutoArtifactConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port(self):
        """Gets the port of this ServiceAutoArtifactConfig.

        Service port  # noqa: E501

        :return: The port of this ServiceAutoArtifactConfig.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this ServiceAutoArtifactConfig.

        Service port  # noqa: E501

        :param port: The port of this ServiceAutoArtifactConfig.
        :type port: int
        """

        self._port = port

    @property
    def auto(self):
        """Gets the auto of this ServiceAutoArtifactConfig.

        When true, enables automatic template  # noqa: E501

        :return: The auto of this ServiceAutoArtifactConfig.
        :rtype: bool
        """
        return self._auto

    @auto.setter
    def auto(self, auto):
        """Sets the auto of this ServiceAutoArtifactConfig.

        When true, enables automatic template  # noqa: E501

        :param auto: The auto of this ServiceAutoArtifactConfig.
        :type auto: bool
        """
        if auto is None:
            raise ValueError("Invalid value for `auto`, must not be `None`")  # noqa: E501

        self._auto = auto

    @property
    def name(self):
        """Gets the name of this ServiceAutoArtifactConfig.

          # noqa: E501

        :return: The name of this ServiceAutoArtifactConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServiceAutoArtifactConfig.

          # noqa: E501

        :param name: The name of this ServiceAutoArtifactConfig.
        :type name: str
        """

        self._name = name
