from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from cloudharness_model.models.base_model_ import Model
from cloudharness_model import util


class ApplicationUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, username=None, password=None, client_roles=None, realm_roles=None):  # noqa: E501
        """ApplicationUser - a model defined in OpenAPI

        :param username: The username of this ApplicationUser.  # noqa: E501
        :type username: str
        :param password: The password of this ApplicationUser.  # noqa: E501
        :type password: str
        :param client_roles: The client_roles of this ApplicationUser.  # noqa: E501
        :type client_roles: List[str]
        :param realm_roles: The realm_roles of this ApplicationUser.  # noqa: E501
        :type realm_roles: List[str]
        """
        self.openapi_types = {
            'username': str,
            'password': str,
            'client_roles': List[str],
            'realm_roles': List[str]
        }

        self.attribute_map = {
            'username': 'username',
            'password': 'password',
            'client_roles': 'clientRoles',
            'realm_roles': 'realmRoles'
        }

        self._username = username
        self._password = password
        self._client_roles = client_roles
        self._realm_roles = realm_roles

    @classmethod
    def from_dict(cls, dikt) -> 'ApplicationUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ApplicationUser of this ApplicationUser.  # noqa: E501
        :rtype: ApplicationUser
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self) -> str:
        """Gets the username of this ApplicationUser.

          # noqa: E501

        :return: The username of this ApplicationUser.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this ApplicationUser.

          # noqa: E501

        :param username: The username of this ApplicationUser.
        :type username: str
        """
        if username is None:
            raise ValueError("Invalid value for `username`, must not be `None`")  # noqa: E501

        self._username = username

    @property
    def password(self) -> str:
        """Gets the password of this ApplicationUser.

          # noqa: E501

        :return: The password of this ApplicationUser.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this ApplicationUser.

          # noqa: E501

        :param password: The password of this ApplicationUser.
        :type password: str
        """

        self._password = password

    @property
    def client_roles(self) -> List[str]:
        """Gets the client_roles of this ApplicationUser.

          # noqa: E501

        :return: The client_roles of this ApplicationUser.
        :rtype: List[str]
        """
        return self._client_roles

    @client_roles.setter
    def client_roles(self, client_roles: List[str]):
        """Sets the client_roles of this ApplicationUser.

          # noqa: E501

        :param client_roles: The client_roles of this ApplicationUser.
        :type client_roles: List[str]
        """

        self._client_roles = client_roles

    @property
    def realm_roles(self) -> List[str]:
        """Gets the realm_roles of this ApplicationUser.

          # noqa: E501

        :return: The realm_roles of this ApplicationUser.
        :rtype: List[str]
        """
        return self._realm_roles

    @realm_roles.setter
    def realm_roles(self, realm_roles: List[str]):
        """Sets the realm_roles of this ApplicationUser.

          # noqa: E501

        :param realm_roles: The realm_roles of this ApplicationUser.
        :type realm_roles: List[str]
        """

        self._realm_roles = realm_roles
