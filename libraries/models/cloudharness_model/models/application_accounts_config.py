from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from cloudharness_model.models.base_model import Model
from cloudharness_model.models.application_user import ApplicationUser
from cloudharness_model import util

from cloudharness_model.models.application_user import ApplicationUser  # noqa: E501

class ApplicationAccountsConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, roles=None, users=None):  # noqa: E501
        """ApplicationAccountsConfig - a model defined in OpenAPI

        :param roles: The roles of this ApplicationAccountsConfig.  # noqa: E501
        :type roles: List[str]
        :param users: The users of this ApplicationAccountsConfig.  # noqa: E501
        :type users: List[ApplicationUser]
        """
        self.openapi_types = {
            'roles': List[str],
            'users': List[ApplicationUser]
        }

        self.attribute_map = {
            'roles': 'roles',
            'users': 'users'
        }

        self._roles = roles
        self._users = users

    @classmethod
    def from_dict(cls, dikt) -> 'ApplicationAccountsConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ApplicationAccountsConfig of this ApplicationAccountsConfig.  # noqa: E501
        :rtype: ApplicationAccountsConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def roles(self) -> List[str]:
        """Gets the roles of this ApplicationAccountsConfig.

        Specify roles to be created in this deployment specific for this application  # noqa: E501

        :return: The roles of this ApplicationAccountsConfig.
        :rtype: List[str]
        """
        return self._roles

    @roles.setter
    def roles(self, roles: List[str]):
        """Sets the roles of this ApplicationAccountsConfig.

        Specify roles to be created in this deployment specific for this application  # noqa: E501

        :param roles: The roles of this ApplicationAccountsConfig.
        :type roles: List[str]
        """

        self._roles = roles

    @property
    def users(self) -> List[ApplicationUser]:
        """Gets the users of this ApplicationAccountsConfig.

        Defines test users to be added to the deployment, specific for this application  # noqa: E501

        :return: The users of this ApplicationAccountsConfig.
        :rtype: List[ApplicationUser]
        """
        return self._users

    @users.setter
    def users(self, users: List[ApplicationUser]):
        """Sets the users of this ApplicationAccountsConfig.

        Defines test users to be added to the deployment, specific for this application  # noqa: E501

        :param users: The users of this ApplicationAccountsConfig.
        :type users: List[ApplicationUser]
        """

        self._users = users
