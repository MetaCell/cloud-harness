local: true
secured_gatekeepers: true
nameOverride: ''
fullnameOverride: ''
domain: ch.local
namespace: ch
mainapp: accounts
test: true
registry:
  name: ''
  secret: ''
tag: latest
apps:
  volumemanager:
    harness:
      subdomain: volumemanager
      domain: null
      dependencies:
        hard: []
        soft: []
        build:
        - cloudharness-flask
      secured: false
      uri_role_mapping:
      - uri: /*
        roles:
        - administrator
      deployment:
        auto: true
        replicas: 1
        image: cloudharness/volumemanager:latest
        name: volumemanager
        port: 8080
        resources: &id001
          requests:
            memory: 32Mi
            cpu: 10m
          limits:
            memory: 500Mi
            cpu: 500m
      service:
        auto: true
        name: volumemanager
        port: 8080
      use_services: []
      database:
        auto: false
        name: volumemanager-db
        type: null
        size: 1Gi
        user: mnp
        pass: metacell
        mongo:
          image: mongo:latest
          ports:
          - name: http
            port: 27017
        postgres:
          image: postgres:latest
          initialdb: cloudharness
          ports:
          - name: http
            port: 5432
        neo4j:
          image: neo4j:latest
          memory:
            size: 256M
            pagecache:
              size: 64M
            heap:
              initial: 64M
              max: 128M
          dbms_security_auth_enabled: 'false'
          ports:
          - name: http
            port: 7474
          - name: bolt
            port: 7687
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
      name: volumemanager
      sentry: true
    image: cloudharness/volumemanager:latest
    task-images: {}
    name: volumemanager
    port: 8080
    resources: *id001
  accounts:
    harness:
      subdomain: accounts
      domain: null
      dependencies:
        hard: []
        soft: []
        build: []
      secured: false
      uri_role_mapping:
      - uri: /*
        roles:
        - administrator
      deployment:
        auto: true
        replicas: 1
        image: cloudharness/accounts:latest
        name: accounts
        port: 8080
        resources: &id002
          requests:
            memory: 512Mi
            cpu: 10m
          limits:
            memory: 1024Mi
            cpu: 500m
      service:
        auto: true
        name: accounts
        port: 8080
      use_services: []
      database:
        auto: true
        name: keycloak-postgres
        type: postgres
        size: 2Gi
        user: user
        pass: password
        mongo:
          image: mongo:latest
          ports:
          - name: http
            port: 27017
        postgres:
          image: postgres:10.4
          initialdb: auth_db
          ports:
          - name: http
            port: 5432
        neo4j:
          image: neo4j:latest
          memory:
            size: 256M
            pagecache:
              size: 64M
            heap:
              initial: 64M
              max: 128M
          dbms_security_auth_enabled: 'false'
          ports:
          - name: http
            port: 7474
          - name: bolt
            port: 7687
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
      env:
      - name: KEYCLOAK_IMPORT
        value: /tmp/realm.json
      - name: KEYCLOAK_USER
        value: admin
      - name: KEYCLOAK_PASSWORD
        value: metacell
      - name: PROXY_ADDRESS_FORWARDING
        value: 'true'
      - name: DB_VENDOR
        value: POSTGRES
      - name: DB_ADDR
        value: keycloak-postgres
      - name: DB_DATABASE
        value: auth_db
      - name: DB_USER
        value: user
      - name: DB_PASSWORD
        value: password
      - name: JAVA_OPTS
        value: -server -Xms64m -Xmx896m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m
          -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman
          -Djava.awt.headless=true  --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
          --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED --add-exports=jdk.unsupported/sun.reflect=ALL-UNNAMED
      resources:
      - name: realm-config
        src: realm.json
        dst: /tmp/realm.json
      readinessProbe:
        path: /auth/realms/master
      name: accounts
    client:
      id: rest-client
      secret: 5678eb6e-9e2c-4ee5-bd54-34e7411339e8
    webclient:
      id: web-client
      secret: 452952ae-922c-4766-b912-7b106271e34b
    enabled: true
    harvest: true
    admin:
      pass: metacell
      user: admin
      role: administrator
    image: cloudharness/accounts:latest
    task-images: {}
    name: accounts
    port: 8080
    resources: *id002
  samples:
    harness:
      subdomain: samples
      domain: null
      dependencies:
        hard: []
        soft:
        - workflows
        - events
        - accounts
        build:
        - cloudharness-flask
        - cloudharness-frontend-build
      secured: false
      uri_role_mapping:
      - uri: /*
        roles:
        - administrator
      deployment:
        auto: true
        replicas: 1
        image: cloudharness/samples:latest
        name: samples
        port: 8080
        resources: &id003
          requests:
            memory: 32Mi
            cpu: 10m
          limits:
            memory: 500Mi
            cpu: 500m
      service:
        auto: true
        name: samples
        port: 8080
      use_services: []
      database:
        auto: false
        name: samples-db
        type: null
        size: 1Gi
        user: mnp
        pass: metacell
        mongo:
          image: mongo:latest
          ports:
          - name: http
            port: 27017
        postgres:
          image: postgres:latest
          initialdb: cloudharness
          ports:
          - name: http
            port: 5432
        neo4j:
          image: neo4j:latest
          memory:
            size: 256M
            pagecache:
              size: 64M
            heap:
              initial: 64M
              max: 128M
          dbms_security_auth_enabled: 'false'
          ports:
          - name: http
            port: 7474
          - name: bolt
            port: 7687
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
      sentry: true
      port: 80
      env:
      - name: WORKERS
        value: '3'
      resources:
      - name: my-config
        src: myConfig.json
        dst: /tmp/resources/myConfig.json
      - name: example
        src: example.yaml
        dst: /usr/src/app/important_config.yaml
      name: samples
    image: cloudharness/samples:latest
    task-images:
      samples-sum: cloudharness/samples-sum:latest
    name: samples
    port: 8080
    resources: *id003
  events:
    harness:
      subdomain: events
      domain: null
      dependencies:
        hard: []
        soft: []
        build: []
      secured: true
      uri_role_mapping:
      - uri: /*
        roles:
        - administrator
      deployment:
        auto: true
        replicas: 1
        image: cloudharness/events:latest
        name: events
        port: 9000
        resources: &id004
          requests:
            memory: 32Mi
            cpu: 10m
          limits:
            memory: 500Mi
            cpu: 500m
      service:
        auto: true
        name: events
        port: 80
      use_services: []
      database:
        auto: false
        name: events-db
        type: null
        size: 1Gi
        user: mnp
        pass: metacell
        mongo:
          image: mongo:latest
          ports:
          - name: http
            port: 27017
        postgres:
          image: postgres:latest
          initialdb: cloudharness
          ports:
          - name: http
            port: 5432
        neo4j:
          image: neo4j:latest
          memory:
            size: 256M
            pagecache:
              size: 64M
            heap:
              initial: 64M
              max: 128M
          dbms_security_auth_enabled: 'false'
          ports:
          - name: http
            port: 7474
          - name: bolt
            port: 7687
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
      env:
      - name: ZK_HOSTS
        value: zookeeper:2181
      name: events
    kafka:
      name: bootstrap
      port: 9092
      storage: 10Gi
      resources:
        limits:
          cpu: 500m
          memory: 600Mi
        requests:
          cpu: 50m
          memory: 100Mi
    pzoo:
      storage: 1Gi
      resources:
        limits:
          memory: 500Mi
        requests:
          cpu: 10m
          memory: 100Mi
    zoo:
      storage: 1Gi
      resources:
        limits:
          memory: 500Mi
        requests:
          cpu: 10m
          memory: 100Mi
    image: cloudharness/events:latest
    task-images: {}
    name: events
    port: 9000
    resources: *id004
  common:
    harness:
      subdomain: common
      domain: null
      dependencies:
        hard: []
        soft: []
        build:
        - cloudharness-flask
      secured: false
      uri_role_mapping:
      - uri: /*
        roles:
        - administrator
      deployment:
        auto: true
        replicas: 1
        image: cloudharness/common:latest
        name: common
        port: 8080
        resources: &id005
          requests:
            memory: 128Mi
            cpu: 50m
          limits:
            memory: 256Mi
            cpu: 200m
      service:
        auto: true
        name: common
        port: 8080
      use_services: []
      database:
        auto: false
        name: common-db
        type: null
        size: 1Gi
        user: mnp
        pass: metacell
        mongo:
          image: mongo:latest
          ports:
          - name: http
            port: 27017
        postgres:
          image: postgres:latest
          initialdb: cloudharness
          ports:
          - name: http
            port: 5432
        neo4j:
          image: neo4j:latest
          memory:
            size: 256M
            pagecache:
              size: 64M
            heap:
              initial: 64M
              max: 128M
          dbms_security_auth_enabled: 'false'
          ports:
          - name: http
            port: 7474
          - name: bolt
            port: 7687
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
      name: common
    image: cloudharness/common:latest
    task-images: {}
    name: common
    port: 8080
    resources: *id005
  argo:
    harness:
      subdomain: argo
      domain: null
      dependencies:
        hard: []
        soft: []
        build: []
      secured: true
      uri_role_mapping:
      - uri: /*
        roles:
        - administrator
      deployment:
        auto: false
        replicas: 1
        image: null
        name: argo
        port: 8080
        resources: &id006
          requests:
            memory: 32Mi
            cpu: 10m
          limits:
            memory: 500Mi
            cpu: 500m
      service:
        auto: false
        name: argo-server
        port: 2746
      use_services: []
      database:
        auto: false
        name: argo-db
        type: null
        size: 1Gi
        user: mnp
        pass: metacell
        mongo:
          image: mongo:latest
          ports:
          - name: http
            port: 27017
        postgres:
          image: postgres:latest
          initialdb: cloudharness
          ports:
          - name: http
            port: 5432
        neo4j:
          image: neo4j:latest
          memory:
            size: 256M
            pagecache:
              size: 64M
            heap:
              initial: 64M
              max: 128M
          dbms_security_auth_enabled: 'false'
          ports:
          - name: http
            port: 7474
          - name: bolt
            port: 7687
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
      name: argo
    serviceaccount: argo-workflows
    task-images: {}
    image: null
    name: argo
    port: 8080
    resources: *id006
  jupyterhub:
    harness:
      subdomain: jupyterhub
      domain: null
      dependencies:
        hard: []
        soft: []
        build: []
      secured: false
      uri_role_mapping:
      - uri: /*
        roles:
        - administrator
      deployment:
        auto: false
        replicas: 1
        image: cloudharness/jupyterhub:latest
        name: jupyterhub
        port: 8080
        resources: &id007
          requests:
            memory: 32Mi
            cpu: 10m
          limits:
            memory: 500Mi
            cpu: 500m
      service:
        auto: false
        name: proxy-public
        port: 80
      use_services: []
      database:
        auto: false
        name: jupyterhub-db
        type: null
        size: 1Gi
        user: mnp
        pass: metacell
        mongo:
          image: mongo:latest
          ports:
          - name: http
            port: 27017
        postgres:
          image: postgres:latest
          initialdb: cloudharness
          ports:
          - name: http
            port: 5432
        neo4j:
          image: neo4j:latest
          memory:
            size: 256M
            pagecache:
              size: 64M
            heap:
              initial: 64M
              max: 128M
          dbms_security_auth_enabled: 'false'
          ports:
          - name: http
            port: 7474
          - name: bolt
            port: 7687
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
      name: jupyterhub
    custom: {}
    hub:
      allowNamedServers: true
      namedServerLimitPerUser: 10
      service:
        type: ClusterIP
        annotations: {}
        ports:
          nodePort: null
        loadBalancerIP: null
      baseUrl: /
      cookieSecret: null
      publicURL: null
      initContainers: []
      uid: 1000
      fsGid: 1000
      nodeSelector: {}
      concurrentSpawnLimit: 64
      consecutiveFailureLimit: 5
      activeServerLimit: null
      image:
        pullSecrets: false
      imagePullSecret:
        enabled: false
      livenessProbe:
        enabled: false
      readinessProbe:
        enabled: false
      deploymentStrategy:
        type: Recreate
        rollingUpdate: null
      db:
        type: sqlite-pvc
        upgrade: null
        pvc:
          annotations: {}
          selector: {}
          accessModes:
          - ReadWriteOnce
          storage: 1Gi
          subPath: null
          storageClassName: null
        url: null
        password: null
      labels: {}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /hub/metrics
      extraConfig:
        timing: |
          c.Spawner.port = 8000
          c.Spawner.http_timeout = 300
          c.Spawner.start_timeout = 300
          c.JupyterHub.tornado_settings = { "headers": { }}
        spawner: c.Spawner.args = ["--debug"]
      extraConfigMap: {}
      extraEnv: {}
      extraContainers: []
      extraVolumes: []
      extraVolumeMounts: []
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
      services: {}
      imagePullPolicy: IfNotPresent
      pdb:
        enabled: true
        minAvailable: 1
      networkPolicy:
        enabled: false
        egress:
        - to:
          - ipBlock:
              cidr: 0.0.0.0/0
    rbac:
      enabled: true
    proxy:
      secretToken: b3fed077c7538cfc5e2a6469ddac7d43a18fc645789407b53e580b7342b968d8
      service:
        type: LoadBalancer
        labels: {}
        annotations: {}
        nodePorts:
          http: null
          https: null
        loadBalancerIP: null
      chp:
        image:
          name: jupyterhub/configurable-http-proxy
          tag: 4.0.1
          pullPolicy: IfNotPresent
        livenessProbe:
          enabled: false
        readinessProbe:
          enabled: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
      nginx:
        image:
          name: quay.io/kubernetes-ingress-controller/nginx-ingress-controller
          tag: 0.15.0
          pullPolicy: IfNotPresent
        proxyBodySize: 64m
        resources: {}
      lego:
        image:
          name: jetstack/kube-lego
          tag: 0.1.7
          pullPolicy: IfNotPresent
        resources: {}
      labels: {}
      nodeSelector: {}
      pdb:
        enabled: true
        minAvailable: 1
      https:
        enabled: true
        type: letsencrypt
        letsencrypt:
          contactEmail: ''
        manual:
          key: null
          cert: null
        secret:
          name: ''
          key: tls.key
          crt: tls.crt
        hosts: []
      networkPolicy:
        enabled: false
        egress:
        - to:
          - ipBlock:
              cidr: 0.0.0.0/0
    auth:
      type: keycloak
      whitelist:
        users: null
      admin:
        access: true
        users: null
      dummy:
        password: null
      ldap:
        dn:
          search: {}
          user: {}
        user: {}
      state:
        enabled: false
        cryptoKey: null
    singleuser:
      extraTolerations: []
      nodeSelector: {}
      extraNodeAffinity:
        required: []
        preferred: []
      extraPodAffinity:
        required: []
        preferred: []
      extraPodAntiAffinity:
        required: []
        preferred: []
      networkTools:
        image:
          name: jupyterhub/k8s-network-tools
          tag: 0.9-b51ffeb
      cloudMetadata:
        enabled: false
        ip: 169.254.169.254
      networkPolicy:
        enabled: false
        egress:
        - to:
          - ipBlock:
              cidr: 0.0.0.0/0
              except:
              - 169.254.169.254/32
      events: true
      extraAnnotations: {}
      extraLabels: {}
      extraEnv: {}
      lifecycleHooks: null
      initContainers: []
      extraContainers: []
      uid: 1000
      fsGid: 100
      serviceAccountName: null
      storage:
        type: dynamic
        capacity: 2Mi
        dynamic:
          pvcNameTemplate: jupyter-{userid}
          volumeNameTemplate: jupyter-{userid}
        homeMountPath: /home/workspace
        extraLabels: {}
      image:
        name: jupyter/base-notebook
        tag: hub-1.1.0
        pullPolicy: IfNotPresent
      imagePullSecret:
        enabled: false
      startTimeout: 300
      cpu:
        limit: 0.4
        guarantee: 0.05
      memory:
        limit: 0.5
        guarantee: 0.1
      extraResource:
        limits: {}
        guarantees: {}
      cmd: jupyterhub-singleuser
      defaultUrl: null
    scheduling:
      userScheduler:
        enabled: false
        replicas: 1
        logLevel: 4
        image:
          name: gcr.io/google_containers/kube-scheduler-amd64
          tag: v1.11.2
        nodeSelector: {}
        pdb:
          enabled: true
          minAvailable: 1
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
      podPriority:
        enabled: false
      userPlaceholder:
        enabled: true
        replicas: 0
      corePods:
        nodeAffinity:
          matchNodePurpose: prefer
      userPods:
        nodeAffinity:
          matchNodePurpose: prefer
    prePuller:
      hook:
        enabled: true
        extraEnv: {}
        image:
          name: jupyterhub/k8s-image-awaiter
          tag: 0.9-b51ffeb
      continuous:
        enabled: false
      extraImages: {}
      pause:
        image:
          name: gcr.io/google_containers/pause
          tag: '3.0'
    ingress:
      enabled: false
      annotations: {}
      hosts: []
      pathSuffix: ''
      tls: null
    cull:
      enabled: true
      users: false
      timeout: 600
      every: 60
      concurrency: 10
      maxAge: 0
    debug:
      enabled: false
    image: cloudharness/jupyterhub:latest
    task-images: {}
    name: jupyterhub
    port: 8080
    resources: *id007
  workflows:
    harness:
      subdomain: workflows
      domain: null
      dependencies:
        hard:
        - argo
        soft: []
        build:
        - cloudharness-flask
      secured: false
      uri_role_mapping:
      - uri: /*
        roles:
        - administrator
      deployment:
        auto: true
        replicas: 1
        image: cloudharness/workflows:latest
        name: workflows
        port: 8080
        resources: &id008
          requests:
            memory: 32Mi
            cpu: 10m
          limits:
            memory: 500Mi
            cpu: 500m
      service:
        auto: true
        name: workflows
        port: 8080
      use_services: []
      database:
        auto: false
        name: workflows-db
        type: null
        size: 1Gi
        user: mnp
        pass: metacell
        mongo:
          image: mongo:latest
          ports:
          - name: http
            port: 27017
        postgres:
          image: postgres:latest
          initialdb: cloudharness
          ports:
          - name: http
            port: 5432
        neo4j:
          image: neo4j:latest
          memory:
            size: 256M
            pagecache:
              size: 64M
            heap:
              initial: 64M
              max: 128M
          dbms_security_auth_enabled: 'false'
          ports:
          - name: http
            port: 7474
          - name: bolt
            port: 7687
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
      name: workflows
    image: cloudharness/workflows:latest
    task-images:
      workflows-print-file: cloudharness/workflows-print-file:latest
      workflows-extract-download: cloudharness/workflows-extract-download:latest
      workflows-send-result-event: cloudharness/workflows-send-result-event:latest
      workflows-notify-queue: cloudharness/workflows-notify-queue:latest
      workflows-extract-s3: cloudharness/workflows-extract-s3:latest
    name: workflows
    port: 8080
    resources: *id008
  sentry:
    harness:
      subdomain: sentry
      domain: null
      dependencies:
        hard: []
        soft: []
        build: []
      secured: false
      uri_role_mapping:
      - uri: /*
        roles:
        - administrator
      deployment:
        auto: true
        replicas: 1
        image: cloudharness/sentry:latest
        name: sentry
        port: 9000
        resources: &id009
          requests:
            memory: 256Mi
            cpu: 300m
          limits:
            memory: 2048Mi
            cpu: 2000m
      service:
        auto: true
        name: sentry
        port: 9000
      use_services: []
      database:
        auto: true
        name: sentry-db
        type: postgres
        size: 2Gi
        user: sentry
        pass: secret
        mongo:
          image: mongo:latest
          ports:
          - name: http
            port: 27017
        postgres:
          image: postgres:latest
          initialdb: sentry
          ports:
          - name: http
            port: 5432
        neo4j:
          image: neo4j:latest
          memory:
            size: 256M
            pagecache:
              size: 64M
            heap:
              initial: 64M
              max: 128M
          dbms_security_auth_enabled: 'false'
          ports:
          - name: http
            port: 7474
          - name: bolt
            port: 7687
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
      env:
      - name: SENTRY_SERVER_EMAIL
        value: zoran@metacell.us
      secrets:
      - name: ch-sentry
        key: server-email
      - name: ch-sentry
        key: email-user
      - name: ch-sentry
        key: email-password
      name: sentry
    redis:
      name: sentry-redis-host
      image: redis:latest
      port: 6379
    image: cloudharness/sentry:latest
    task-images: {}
    name: sentry
    port: 9000
    resources: *id009
env:
- name: CH_VERSION
  value: 0.0.1
- name: CH_CHART_VERSION
  value: 0.0.1
- name: CH_VOLUMEMANAGER_SUBDOMAIN
  value: volumemanager
- name: CH_VOLUMEMANAGER_NAME
  value: volumemanager
- name: CH_ACCOUNTS_SUBDOMAIN
  value: accounts
- name: CH_ACCOUNTS_NAME
  value: accounts
- name: CH_SAMPLES_SUBDOMAIN
  value: samples
- name: CH_SAMPLES_PORT
  value: 80
- name: CH_SAMPLES_NAME
  value: samples
- name: CH_EVENTS_SUBDOMAIN
  value: events
- name: CH_EVENTS_NAME
  value: events
- name: CH_COMMON_SUBDOMAIN
  value: common
- name: CH_COMMON_NAME
  value: common
- name: CH_ARGO_SUBDOMAIN
  value: argo
- name: CH_ARGO_NAME
  value: argo
- name: CH_JUPYTERHUB_SUBDOMAIN
  value: jupyterhub
- name: CH_JUPYTERHUB_NAME
  value: jupyterhub
- name: CH_WORKFLOWS_SUBDOMAIN
  value: workflows
- name: CH_WORKFLOWS_NAME
  value: workflows
- name: CH_SENTRY_SUBDOMAIN
  value: sentry
- name: CH_SENTRY_NAME
  value: sentry
- name: CH_DOMAIN
  value: cloudharness.metacell.us
- name: CH_IMAGE_REGISTRY
  value: ''
- name: CH_IMAGE_TAG
  value: latest
privenv:
- name: CH_SECRET
  value: "In God we trust; all others must bring data. \u2015 W. Edwards Deming"
ingress:
  enabled: true
  name: cloudharness-ingress
  ssl_redirect: true
  letsencrypt:
    email: filippo@metacell.us
backup:
  active: true
  keep_days: '7'
  keep_weeks: '4'
  keep_months: '6'
  schedule: '*/5 * * * *'
  suffix: .gz
  volumesize: 2Gi
  dir: /backups
  resources:
    requests:
      memory: 32Mi
      cpu: 25m
    limits:
      memory: 64Mi
      cpu: 50m
task-images:
  cloudharness-base: cloudharness/cloudharness-base:latest
  cloudharness-base-debian: cloudharness/cloudharness-base-debian:latest
  cloudharness-frontend-build: cloudharness/cloudharness-frontend-build:latest
  cloudharness-flask: cloudharness/cloudharness-flask:latest
name: cloudharness
tls: false
localIp: 192.168.99.106
