---
# Source: cloudharness/templates/auto-secrets.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: accounts
  namespace: ch
  labels:
    app: accounts
type: Opaque
# secret doesn't exist
stringData:
  api_user_password: ndLn0HzINdQewxFuzmM7
---
# Source: cloudharness/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: deployment-secrets
type: Opaque
data:
  CH_SECRET: "IkluIEdvZCB3ZSB0cnVzdDsgYWxsIG90aGVycyBtdXN0IGJyaW5nIGRhdGEuIOKAlSBXLiBFZHdhcmRzIERlbWluZyI="
---
# Source: cloudharness/templates/auto-deployments.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: "accounts-realm-config"
  labels:
    app: "accounts"
      
    chart: cloudharness-0.0.1
    release: "RELEASE-NAME"
    heritage: "Helm"
data:
  realm.json: "\n{\n        \"id\": \"ch\",\n        \"realm\": \"ch\",\n        \"enabled\": true,\n        \"sslRequired\": \"none\",\n        \"loginTheme\": \"keycloak\",\n        \"accountTheme\": \"keycloak\",\n        \"adminTheme\": \"keycloak\",\n        \"emailTheme\": \"keycloak\",\n        \"registrationAllowed\": true,\n        \"registrationEmailAsUsername\": false,\n        \"rememberMe\": true,\n        \"verifyEmail\": false,\n        \"loginWithEmailAllowed\": true,\n        \"duplicateEmailsAllowed\": false,\n        \"resetPasswordAllowed\": true,\n        \"editUsernameAllowed\": true,\n        \"users\": [\n            {\n                \"username\": \"keycloak\",\n                \"enabled\": true,\n                \"credentials\": [\n                    {\n                        \"type\": \"password\",\n                        \"value\": \"test\"\n                    }\n                ],\n                \"realmRoles\": [\n                    \"offline_access\"\n                ]\n            },\n            {\n                \"username\": \"test\",\n                \"enabled\": true,\n                \"credentials\": [\n                    {\n                        \"type\": \"password\",\n                        \"value\": \"test\"\n                    }\n                ],\n                \"realmRoles\": [\n                    \"offline_access\"\n                ],\n                \"clientRoles\": {\n                    \"samples\": [\"role1\"]\n                } \n            },\n                \n    {\n        \"username\": \"sample@testuser.com\",\n        \"email\": \"sample@testuser.com\",\n        \"enabled\": true,\n        \"credentials\": [\n            {\n                \"type\": \"password\",\n                \"value\": \"test\"\n            }\n        ],\n        \"realmRoles\": [\"offline_access\"],\n        \"clientRoles\": {\n            \"samples\": [\"role1\"]\n        } \n    },\n                \n    {\n        \"username\": \"samples-test-user2\",\n        \"email\": \"sample2@testuser.com\",\n        \"enabled\": true,\n        \"credentials\": [\n            {\n                \"type\": \"password\",\n                \"value\": \"test\"\n            }\n        ],\n        \"realmRoles\": [\"offline_access\"],\n        \"clientRoles\": {\n            \"samples\": [\"role1\"]\n        } \n    }\n        ],\n        \"roles\": {\n            \"realm\": [\n                {\n                    \"id\": \"70835ad6-1454-4bc5-86a4-f1597e776b75\",\n                    \"name\": \"administrator\",\n                    \"composite\": false,\n                    \"clientRole\": false,\n                    \"containerId\": \"ch\",\n                    \"attributes\": {}\n                },\n                {\n                    \"id\": \"498353dd-88eb-4a5e-99b8-d912e0f20f23\",\n                    \"name\": \"uma_authorization\",\n                    \"description\": \"${role_uma_authorization}\",\n                    \"composite\": false,\n                    \"clientRole\": false,\n                    \"containerId\": \"ch\",\n                    \"attributes\": {}\n                },\n                {\n                    \"id\": \"f99970f1-958b-4bb8-8b39-0d7498b0ecc4\",\n                    \"name\": \"offline_access\",\n                    \"description\": \"${role_offline-access}\",\n                    \"composite\": false,\n                    \"clientRole\": false,\n                    \"containerId\": \"ch\",\n                    \"attributes\": {}\n                }\n            ],\n            \"client\": {\n                \"samples\": [\n                \n                \n    {\n      \"id\": \"e935ff86-981c-4907-8730-db9eec8ceec3\",\n      \"name\": \"role1\",\n      \"composite\": false,\n      \"clientRole\": true,\n      \"containerId\": \"samples\",\n      \"attributes\": {}\n    }\n                ,\n                \n    {\n      \"id\": \"3cb7f689-9d79-4439-882b-c41065b7ca4c\",\n      \"name\": \"role2\",\n      \"composite\": false,\n      \"clientRole\": true,\n      \"containerId\": \"samples\",\n      \"attributes\": {}\n    }\n                ,\n                \n    {\n      \"id\": \"4ad7a5f2-f29d-4b43-a1e0-f7431a47469c\",\n      \"name\": \"role3\",\n      \"composite\": false,\n      \"clientRole\": true,\n      \"containerId\": \"samples\",\n      \"attributes\": {}\n    }\n                ]\n            }\n        },\n        \"clients\": [\n            {\n                \"id\": \"9a6a2560-c6be-4493-8bd5-3fdc4522d82b\",\n                \"clientId\": \"rest-client\",\n                \"baseUrl\": \"http://accounts.ch.local\",\n                \"surrogateAuthRequired\": false,\n                \"enabled\": true,\n                \"clientAuthenticatorType\": \"client-secret\",\n                \"secret\": \"5678eb6e-9e2c-4ee5-bd54-34e7411339e8\",\n                \"redirectUris\": [\n                    \"*\"\n                ],\n                \"webOrigins\": [\n                    \"*\"\n                ],\n                \"standardFlowEnabled\": true,\n                \"directAccessGrantsEnabled\": true,\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                    \"access.token.lifespan\": \"3600\"\n                },\n                \"fullScopeAllowed\": true,\n                \"defaultClientScopes\": [\n                    \"web-origins\",\n                    \"role_list\",\n                    \"profile\",\n                    \"roles\",\n                    \"email\"\n                ],\n                \"optionalClientScopes\": [\n                    \"address\",\n                    \"phone\",\n                    \"offline_access\",\n                    \"microprofile-jwt\"\n                ]\n            },\n            {\n                \"id\": \"accounts\",\n                \"clientId\": \"accounts\",\n                \"name\": \"accounts\",\n                \"surrogateAuthRequired\": false,\n                \"enabled\": true,\n                \"alwaysDisplayInConsole\": false,\n                \"clientAuthenticatorType\": \"client-secret\",\n                \"secret\": \"oMXrWzzXJdT5vy8l2qjC\",\n                \"redirectUris\": [\n                  \"*\"\n                ],\n                \"webOrigins\": [\n                  \"*\",\n                  \"+\"\n                ],\n                \"notBefore\": 0,\n                \"bearerOnly\": false,\n                \"consentRequired\": false,\n                \"standardFlowEnabled\": true,\n                \"implicitFlowEnabled\": false,\n                \"directAccessGrantsEnabled\": true,\n                \"serviceAccountsEnabled\": false,\n                \"publicClient\": true,\n                \"frontchannelLogout\": false,\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                  \"backchannel.logout.session.required\": \"true\",\n                  \"backchannel.logout.revoke.offline.tokens\": \"false\"\n                },\n                \"authenticationFlowBindingOverrides\": {},\n                \"fullScopeAllowed\": true,\n                \"nodeReRegistrationTimeout\": -1,\n                \"defaultClientScopes\": [],\n                \"optionalClientScopes\": []\n              },\n            {\n                \"id\": \"samples\",\n                \"clientId\": \"samples\",\n                \"name\": \"samples\",\n                \"surrogateAuthRequired\": false,\n                \"enabled\": true,\n                \"alwaysDisplayInConsole\": false,\n                \"clientAuthenticatorType\": \"client-secret\",\n                \"secret\": \"KjRYZiJDTJ8n0z8LzldK\",\n                \"redirectUris\": [\n                  \"*\"\n                ],\n                \"webOrigins\": [\n                  \"*\",\n                  \"+\"\n                ],\n                \"notBefore\": 0,\n                \"bearerOnly\": false,\n                \"consentRequired\": false,\n                \"standardFlowEnabled\": true,\n                \"implicitFlowEnabled\": false,\n                \"directAccessGrantsEnabled\": true,\n                \"serviceAccountsEnabled\": false,\n                \"publicClient\": true,\n                \"frontchannelLogout\": false,\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                  \"backchannel.logout.session.required\": \"true\",\n                  \"backchannel.logout.revoke.offline.tokens\": \"false\"\n                },\n                \"authenticationFlowBindingOverrides\": {},\n                \"fullScopeAllowed\": true,\n                \"nodeReRegistrationTimeout\": -1,\n                \"defaultClientScopes\": [],\n                \"optionalClientScopes\": []\n              },\n            {\n                \"id\": \"111caf43-3d26-484d-8dc9-7fa911ac221c\",\n                \"clientId\": \"web-client\",\n                \"baseUrl\": \"http://accounts.ch.local\",\n                \"surrogateAuthRequired\": false,\n                \"enabled\": true,\n                \"clientAuthenticatorType\": \"client-secret\",\n                \"secret\": \"452952ae-922c-4766-b912-7b106271e34b\",\n                \"redirectUris\": [\n                    \"*\"\n                ],\n                \"webOrigins\": [\n                    \"*\",\n                    \"+\"\n                ],\n                \"standardFlowEnabled\": true,\n                \"directAccessGrantsEnabled\": true,\n                \"publicClient\": true,\n                \"protocol\": \"openid-connect\",\n                \"fullScopeAllowed\": true,\n                \"defaultClientScopes\": [\n                    \"web-origins\",\n                    \"role_list\",\n                    \"administrator-scope\",\n                    \"profile\",\n                    \"roles\",\n                    \"email\"\n                ],\n                \"optionalClientScopes\": [\n                    \"address\",\n                    \"phone\",\n                    \"offline_access\",\n                    \"microprofile-jwt\"\n                ]\n            }\n        ],\n        \"clientScopes\": [\n            {\n                \"id\": \"a8cddc84-c506-4196-8f2d-1bd5e8769f3c\",\n                \"name\": \"administrator-scope\",\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                    \"include.in.token.scope\": \"true\",\n                    \"display.on.consent.screen\": \"true\"\n                },\n                \"protocolMappers\": [\n                    {\n                        \"id\": \"45fc2547-1761-420b-b6a8-7dc882a51507\",\n                        \"name\": \"administrator-audience\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-audience-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"included.client.audience\": \"web-client\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"id\": \"35c37cdc-6841-41e7-b90f-2964fc563998\",\n                \"name\": \"microprofile-jwt\",\n                \"description\": \"Microprofile - JWT built-in scope\",\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                    \"include.in.token.scope\": \"true\",\n                    \"display.on.consent.screen\": \"false\"\n                },\n                \"protocolMappers\": [\n                    {\n                        \"id\": \"611fb1bc-56cd-49d2-a11b-ddf05bd220db\",\n                        \"name\": \"upn\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-property-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"username\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"upn\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"63850e7d-1031-447a-a8af-3df588a39350\",\n                        \"name\": \"groups\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-realm-role-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"multivalued\": \"true\",\n                            \"user.attribute\": \"foo\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"groups\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"id\": \"dc927013-0448-4a29-ac72-7d6b019180d9\",\n                \"name\": \"web-origins\",\n                \"description\": \"OpenID Connect scope for add allowed web origins to the access token\",\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                    \"include.in.token.scope\": \"false\",\n                    \"display.on.consent.screen\": \"false\",\n                    \"consent.screen.text\": \"\"\n                },\n                \"protocolMappers\": [\n                    {\n                    \"id\": \"3cc4569c-83b0-4bc9-af31-186c8081f8ac\",\n                    \"name\": \"allowed web origins\",\n                    \"protocol\": \"openid-connect\",\n                    \"protocolMapper\": \"oidc-allowed-origins-mapper\",\n                    \"consentRequired\": false,\n                    \"config\": {}\n                    }\n                ]\n            },\n            {\n                \"id\": \"4bd583e6-9f6d-4846-9a94-2f02b1b4b1db\",\n                \"name\": \"roles\",\n                \"description\": \"OpenID Connect scope for add user roles to the access token\",\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                    \"include.in.token.scope\": \"false\",\n                    \"display.on.consent.screen\": \"true\",\n                    \"consent.screen.text\": \"${rolesScopeConsentText}\"\n                },\n                \"protocolMappers\": [\n                    {\n                        \"id\": \"0d359e4f-3d4d-4ef3-88fd-2dd9f41da8cd\",\n                        \"name\": \"client roles\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-client-role-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"multivalued\": \"true\",\n                            \"user.attribute\": \"foo\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"resource_access.${client_id}.roles\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"98ea5505-f703-49d2-b927-7715a7fc7a19\",\n                        \"name\": \"realm roles\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-realm-role-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"multivalued\": \"true\",\n                            \"user.attribute\": \"foo\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"realm_access.roles\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"28b26ce3-7edc-47c2-982f-881f1c001ef3\",\n                        \"name\": \"audience resolve\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-audience-resolve-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {}\n                    }\n                ]\n            },\n            {\n                \"id\": \"e2606962-dd91-4926-af4e-cce6a036a04a\",\n                \"name\": \"phone\",\n                \"description\": \"OpenID Connect built-in scope: phone\",\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                    \"include.in.token.scope\": \"true\",\n                    \"display.on.consent.screen\": \"true\",\n                    \"consent.screen.text\": \"${phoneScopeConsentText}\"\n                },\n                \"protocolMappers\": [\n                    {\n                        \"id\": \"c7e30f92-6026-4291-b526-3716662c26f1\",\n                        \"name\": \"phone number verified\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"phoneNumberVerified\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"phone_number_verified\",\n                            \"jsonType.label\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"id\": \"b1927570-c38d-49b8-9bbb-3cf9571f00be\",\n                        \"name\": \"phone number\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"phoneNumber\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"phone_number\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"id\": \"6f532104-efc0-41d9-8fbc-9c78372d3f1b\",\n                \"name\": \"address\",\n                \"description\": \"OpenID Connect built-in scope: address\",\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                    \"include.in.token.scope\": \"true\",\n                    \"display.on.consent.screen\": \"true\",\n                    \"consent.screen.text\": \"${addressScopeConsentText}\"\n                },\n                \"protocolMappers\": [\n                    {\n                        \"id\": \"548dd8e4-1ee8-4f7d-8934-439bdd1cc0bb\",\n                        \"name\": \"address\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-address-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"user.attribute.formatted\": \"formatted\",\n                            \"user.attribute.country\": \"country\",\n                            \"user.attribute.postal_code\": \"postal_code\",\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute.street\": \"street\",\n                            \"id.token.claim\": \"true\",\n                            \"user.attribute.region\": \"region\",\n                            \"access.token.claim\": \"true\",\n                            \"user.attribute.locality\": \"locality\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"id\": \"b16d9232-a4e2-47d4-a368-5279a0d84913\",\n                \"name\": \"email\",\n                \"description\": \"OpenID Connect built-in scope: email\",\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                    \"include.in.token.scope\": \"true\",\n                    \"display.on.consent.screen\": \"true\",\n                    \"consent.screen.text\": \"${emailScopeConsentText}\"\n                },\n                \"protocolMappers\": [\n                    {\n                        \"id\": \"4bd6701a-cc02-481e-83c5-e048ea5d83a9\",\n                        \"name\": \"email\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-property-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"email\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"email\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"4cf00282-d385-456a-8943-4bdde6357c16\",\n                        \"name\": \"email verified\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-property-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"emailVerified\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"email_verified\",\n                            \"jsonType.label\": \"boolean\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"id\": \"1e9fa514-8ae1-4980-9ccc-2d2d2c43c7e6\",\n                \"name\": \"profile\",\n                \"description\": \"OpenID Connect built-in scope: profile\",\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                    \"include.in.token.scope\": \"true\",\n                    \"display.on.consent.screen\": \"true\",\n                    \"consent.screen.text\": \"${profileScopeConsentText}\"\n                },\n                \"protocolMappers\": [\n                    {\n                        \"id\": \"2e186cd7-b7d5-4b63-b765-c77036183db6\",\n                        \"name\": \"updated at\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"updatedAt\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"updated_at\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"86e94688-d91b-493b-809a-07005c7e6cab\",\n                        \"name\": \"picture\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"picture\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"picture\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"8e65f9c7-a3c0-4bf6-9c4e-47be99464408\",\n                        \"name\": \"zoneinfo\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"zoneinfo\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"zoneinfo\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"9eeaaeb3-93fc-439f-a8db-d6f3693a8ba1\",\n                        \"name\": \"given name\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-property-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"firstName\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"given_name\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"34e60d98-fcde-49a2-b093-748464886a0d\",\n                        \"name\": \"middle name\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"middleName\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"middle_name\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"08fa0341-5dd3-42e2-babb-1151c35b72c3\",\n                        \"name\": \"nickname\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"nickname\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"nickname\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"9d9f1655-9b23-4e15-b244-aeffcb20c5ba\",\n                        \"name\": \"gender\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"gender\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"gender\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"23b19dbb-5af2-494e-b462-e8f63d9266f4\",\n                        \"name\": \"birthdate\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"birthdate\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"birthdate\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"b4644d65-ffbb-4e0b-8aac-238665af40dc\",\n                        \"name\": \"locale\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"locale\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"locale\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"6366756e-bf69-4844-b127-60fa514ad768\",\n                        \"name\": \"website\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"website\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"website\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"3d763f84-d417-4b4e-99e4-2b0e05bf861a\",\n                        \"name\": \"family name\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-property-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"lastName\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"family_name\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"d05efa25-5348-4a14-9550-69791df4ec5e\",\n                        \"name\": \"full name\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-full-name-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"userinfo.token.claim\": \"true\"\n                        }\n                    },\n                    {\n                        \"id\": \"0d66e664-6b0c-45de-ba88-b2b86b23cacc\",\n                        \"name\": \"profile\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-attribute-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"profile\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"profile\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    },\n                    {\n                        \"id\": \"17d3b93d-993b-4768-892c-0b20f8462be3\",\n                        \"name\": \"username\",\n                        \"protocol\": \"openid-connect\",\n                        \"protocolMapper\": \"oidc-usermodel-property-mapper\",\n                        \"consentRequired\": false,\n                        \"config\": {\n                            \"userinfo.token.claim\": \"true\",\n                            \"user.attribute\": \"username\",\n                            \"id.token.claim\": \"true\",\n                            \"access.token.claim\": \"true\",\n                            \"claim.name\": \"preferred_username\",\n                            \"jsonType.label\": \"String\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"id\": \"a46716b3-8da1-4657-b703-13a5cd472c92\",\n                \"name\": \"role_list\",\n                \"description\": \"SAML role list\",\n                \"protocol\": \"saml\",\n                \"attributes\": {\n                    \"consent.screen.text\": \"${samlRoleListScopeConsentText}\",\n                    \"display.on.consent.screen\": \"true\"\n                },\n                \"protocolMappers\": [\n                    {\n                    \"id\": \"0ab50259-1e8b-40bd-9686-fb9a54dfc37d\",\n                    \"name\": \"role list\",\n                    \"protocol\": \"saml\",\n                    \"protocolMapper\": \"saml-role-list-mapper\",\n                    \"consentRequired\": false,\n                    \"config\": {\n                        \"single\": \"false\",\n                        \"attribute.nameformat\": \"Basic\",\n                        \"attribute.name\": \"Role\"\n                    }\n                    }\n                ]\n            },\n            {\n                \"id\": \"0f9bd78c-129e-4f87-9cf7-8b68b628ea1b\",\n                \"name\": \"offline_access\",\n                \"description\": \"OpenID Connect built-in scope: offline_access\",\n                \"protocol\": \"openid-connect\",\n                \"attributes\": {\n                    \"consent.screen.text\": \"${offlineAccessScopeConsentText}\",\n                    \"display.on.consent.screen\": \"true\"\n                }\n            }\n        ],\n        \"keycloakVersion\": \"9.0.2\"\n    }"
---
# Source: cloudharness/templates/auto-deployments.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: "samples-my-config"
  labels:
    app: "samples"
      
    chart: cloudharness-0.0.1
    release: "RELEASE-NAME"
    heritage: "Helm"
data:
  myConfig.json: "{\n  \"name\": \"hello\"\n}"
---
# Source: cloudharness/templates/auto-deployments.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: "samples-example"
  labels:
    app: "samples"
      
    chart: cloudharness-0.0.1
    release: "RELEASE-NAME"
    heritage: "Helm"
data:
  important_config.yaml: "hey: this\nis: a\nyaml: file\n"
---
# Source: cloudharness/templates/auto-gatekeepers.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "samples-gk"
  labels:
    app: "samples-gk"
data:
  proxy.yml: |-
    verbose: 
    discovery-url: http://accounts.ch.local/auth/realms/ch
    client-id: "web-client"
    client-secret: 452952ae-922c-4766-b912-7b106271e34b
    secure-cookie: false
    forbidden-page: /templates/access-denied.html.tmpl
    listen: 0.0.0.0:8080
    enable-refresh-tokens: true
    tls-cert:
    tls-private-key:
    redirection-url: http://samples.ch.local
    encryption-key: AgXa7xRcoClDEU0ZDSH4X0XhL5Qy2Z2j
    upstream-url: http://samples.default:8080
    
      
    resources:
    
    - roles:
      - administrator
      uri: /*
    
    skip-openid-provider-tls-verify: true
  cacert.crt: ""
  access-denied.html.tmpl: |-
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="UTF-8">
      <title>403 - Access Forbidden</title>
      <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
      <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
      <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
      <style>
        .oops {
          font-size: 9em;
          letter-spacing: 2px;
        }
        .message {
          font-size: 3em;
        }
      </style>
    </head>
    <body>
      <div class="container text-center">
        <div class="row vcenter" style="margin-top: 20%;">
          <div class="col-md-12">
            <div class="error-template">
              <h1 class="oops">Oops!</h1>
              <h2 class="message">403 Permission Denied</h2>
              <div class="error-details">
                Sorry, you do not have access to this page, please contact your administrator.
                If you have been assigned new authorizations try to <a href="/oauth/logout?redirect=/">login again</a>.
              </div>
            </div>
          </div>
        </div>
    </div>

    </body>
    </html>
---
# Source: cloudharness/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: cloudharness-allvalues
  labels:
    app: cloudharness
data:
  allvalues.yaml: |
    apps:
      accounts:
        admin:
          pass: metacell
          role: administrator
          user: admin
        client:
          id: rest-client
          secret: 5678eb6e-9e2c-4ee5-bd54-34e7411339e8
        enabled: true
        harness:
          aliases: []
          database:
            auto: true
            mongo:
              image: mongo:5
              ports:
              - name: http
                port: 27017
            name: keycloak-postgres
            neo4j:
              dbms_security_auth_enabled: "false"
              image: neo4j:4.1.9
              memory:
                heap:
                  initial: 64M
                  max: 128M
                pagecache:
                  size: 64M
                size: 256M
              ports:
              - name: http
                port: 7474
              - name: bolt
                port: 7687
            pass: password
            postgres:
              image: postgres:10.4
              initialdb: auth_db
              ports:
              - name: http
                port: 5432
            resources:
              limits:
                cpu: 1000m
                memory: 2Gi
              requests:
                cpu: 100m
                memory: 512Mi
            size: 2Gi
            type: postgres
            user: user
          dependencies:
            build: []
            hard: []
            soft: []
          deployment:
            auto: true
            image: cloudharness/accounts:latest
            name: accounts
            port: 8080
            replicas: 1
            resources:
              limits:
                cpu: 500m
                memory: 1024Mi
              requests:
                cpu: 10m
                memory: 512Mi
          domain: null
          env:
          - name: KEYCLOAK_IMPORT
            value: /tmp/realm.json
          - name: KEYCLOAK_USER
            value: admin
          - name: KEYCLOAK_PASSWORD
            value: metacell
          - name: PROXY_ADDRESS_FORWARDING
            value: "true"
          - name: DB_VENDOR
            value: POSTGRES
          - name: DB_ADDR
            value: keycloak-postgres
          - name: DB_DATABASE
            value: auth_db
          - name: DB_USER
            value: user
          - name: DB_PASSWORD
            value: password
          - name: JAVA_OPTS
            value: -server -Xms64m -Xmx896m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m
              -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman
              -Djava.awt.headless=true  --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
              --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED --add-exports=jdk.unsupported/sun.reflect=ALL-UNNAMED
          name: accounts
          readinessProbe:
            path: /auth/realms/master
          resources:
          - dst: /tmp/realm.json
            name: realm-config
            src: realm.json
          secrets: ""
          secured: false
          service:
            auto: true
            name: accounts
            port: 8080
          subdomain: accounts
          uri_role_mapping:
          - roles:
            - administrator
            uri: /*
          use_services: []
        harvest: true
        image: cloudharness/accounts:latest
        name: accounts
        port: 8080
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 10m
            memory: 512Mi
        task-images: {}
        webclient:
          id: web-client
          secret: 452952ae-922c-4766-b912-7b106271e34b
      samples:
        harness:
          accounts:
            roles:
            - role1
            - role2
            - role3
            users:
            - clientRoles:
              - role1
              realmRoles:
              - offline_access
              username: sample@testuser.com
            - clientRoles:
              - role1
              email: sample2@testuser.com
              password: test1
              realmRoles:
              - offline_access
              username: samples-test-user2
          aliases: []
          database:
            auto: false
            mongo:
              image: mongo:5
              ports:
              - name: http
                port: 27017
            name: samples-db
            neo4j:
              dbms_security_auth_enabled: "false"
              image: neo4j:4.1.9
              memory:
                heap:
                  initial: 64M
                  max: 128M
                pagecache:
                  size: 64M
                size: 256M
              ports:
              - name: http
                port: 7474
              - name: bolt
                port: 7687
            pass: metacell
            postgres:
              image: postgres:13
              initialdb: cloudharness
              ports:
              - name: http
                port: 5432
            resources:
              limits:
                cpu: 1000m
                memory: 2Gi
              requests:
                cpu: 100m
                memory: 512Mi
            size: 1Gi
            type: null
            user: mnp
          dependencies:
            build:
            - cloudharness-flask
            - cloudharness-frontend-build
            hard: []
            soft: []
          deployment:
            auto: true
            image: cloudharness/samples:latest
            name: samples
            port: 8080
            replicas: 1
            resources:
              limits:
                cpu: 500m
                memory: 500Mi
              requests:
                cpu: 10m
                memory: 32Mi
          domain: null
          env:
          - name: WORKERS
            value: "3"
          name: samples
          port: 80
          resources:
          - dst: /tmp/resources/myConfig.json
            name: my-config
            src: myConfig.json
          - dst: /usr/src/app/important_config.yaml
            name: example
            src: example.yaml
          secrets: ""
          secured: true
          sentry: true
          service:
            auto: true
            name: samples
            port: 8080
          subdomain: samples
          uri_role_mapping:
          - roles:
            - administrator
            uri: /*
          use_services: []
        image: cloudharness/samples:latest
        name: samples
        port: 8080
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 10m
            memory: 32Mi
        task-images:
          cloudharness-flask: cloudharness/cloudharness-flask:latest
          cloudharness-frontend-build: cloudharness/cloudharness-frontend-build:latest
          samples-print-file: cloudharness/samples-print-file:latest
          samples-sum: cloudharness/samples-sum:latest
    backup:
      active: true
      dir: /backups
      keep_days: "7"
      keep_months: "6"
      keep_weeks: "4"
      resources:
        limits:
          cpu: 50m
          memory: 64Mi
        requests:
          cpu: 25m
          memory: 32Mi
      schedule: '*/5 * * * *'
      suffix: .gz
      volumesize: 2Gi
    domain: ch.local
    env:
    - name: CH_VERSION
      value: 0.0.1
    - name: CH_CHART_VERSION
      value: 0.0.1
    - name: CH_ACCOUNTS_SUBDOMAIN
      value: accounts
    - name: CH_ACCOUNTS_NAME
      value: accounts
    - name: CH_SAMPLES_SUBDOMAIN
      value: samples
    - name: CH_SAMPLES_PORT
      value: 80
    - name: CH_SAMPLES_NAME
      value: samples
    - name: CH_DOMAIN
      value: ch.local
    - name: CH_IMAGE_REGISTRY
      value: ""
    - name: CH_IMAGE_TAG
      value: latest
    fullnameOverride: ""
    ingress:
      enabled: true
      letsencrypt:
        email: filippo@metacell.us
      name: cloudharness-ingress
      ssl_redirect: false
    local: true
    localIp: 172.19.122.148
    mainapp: accounts
    name: cloudharness
    nameOverride: ""
    namespace: ch
    privenv:
    - name: CH_SECRET
      value: In God we trust; all others must bring data. ― W. Edwards Deming
    registry:
      name: ""
      secret: ""
    secured_gatekeepers: true
    tag: latest
    task-images:
      cloudharness-base: cloudharness/cloudharness-base:latest
      cloudharness-flask: cloudharness/cloudharness-flask:latest
      cloudharness-frontend-build: cloudharness/cloudharness-frontend-build:latest
      samples-print-file: cloudharness/samples-print-file:latest
      samples-sum: cloudharness/samples-sum:latest
    tls: false
---
# Source: cloudharness/templates/auto-database.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "db-backups"
  namespace: ch
spec:
  accessModes:
    - ReadWriteOnce
    - ReadOnlyMany
  resources:
    requests:
      storage: 2Gi
---
# Source: cloudharness/templates/auto-database.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "keycloak-postgres"
  namespace: ch
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
# Source: cloudharness/templates/auto-database.yaml
apiVersion: v1
kind: Service
metadata:
  name: "keycloak-postgres"
  namespace: ch
  labels:
    app: "accounts"
    
    chart: cloudharness-0.0.1
    release: "RELEASE-NAME"
    heritage: "Helm"
spec:
  type: ClusterIP
  selector:
    app: "keycloak-postgres"
  ports:
  - name: http
    port: 5432
---
# Source: cloudharness/templates/auto-gatekeepers.yaml
apiVersion: v1
kind: Service
metadata:
  name: "samples-gk"
  labels:
    app: "samples-gk"
spec:
  ports:
  - name: http
    port: 8080
  selector:
    app: "samples-gk"
  type: ClusterIP
---
# Source: cloudharness/templates/auto-services.yaml
apiVersion: v1
kind: Service
metadata:
  name: "accounts"
  labels:
    app: "accounts"
    
    chart: cloudharness-0.0.1
    release: "RELEASE-NAME"
    heritage: "Helm"
spec:
  selector:
    app: "accounts"
  ports:
    - port: 8080
      targetPort: 8080
      name: http
---
# Source: cloudharness/templates/auto-services.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: "samples"
  labels:
    app: "samples"
    
    chart: cloudharness-0.0.1
    release: "RELEASE-NAME"
    heritage: "Helm"
spec:
  selector:
    app: "samples"
  ports:
    - port: 8080
      targetPort: 8080
      name: http
---
# Source: cloudharness/templates/auto-database.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "keycloak-postgres"
  namespace: ch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "keycloak-postgres"
  template:
    metadata:
      labels:
        app: "keycloak-postgres"
        service: db
    spec:
      containers:
      - name: "keycloak-postgres"
        imagePullPolicy: IfNotPresent
        
        image: postgres:10.4
        env:
          - name: POSTGRES_DB
            value: "auth_db"
          - name: POSTGRES_USER
            value: "user"
          - name: POSTGRES_PASSWORD
            value: "password"
          - name: PGDATA
            value: /data/db/pgdata
        ports:
        - name: http
          containerPort: 5432
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
        volumeMounts:
          - name: "keycloak-postgres"
            mountPath: /data/db
          - name: "db-backups"
            mountPath: "/backups/postgres/keycloak-postgres"
            readOnly: true
      volumes:
      - name: "keycloak-postgres"
        persistentVolumeClaim:
          claimName: "keycloak-postgres"
      - name: "db-backups"
        persistentVolumeClaim:
          claimName: "db-backups"
---
# Source: cloudharness/templates/auto-deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "accounts"
  namespace: ch
  labels:
    app: "accounts"    
    chart: cloudharness-0.0.1
    release: "RELEASE-NAME"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "accounts"      
      chart: cloudharness-0.0.1
      release: "RELEASE-NAME"
      heritage: "Helm"
  template:
    metadata:
      annotations:
        co.elastic.logs/enabled: "true"
        metricbeat: "true"
      labels:
        app: "accounts"        
        chart: cloudharness-0.0.1
        release: "RELEASE-NAME"
        heritage: "Helm"
    spec:
      containers:
      - name: "accounts"
        image: cloudharness/accounts:latest
        imagePullPolicy: Never
        env:
        - name: CH_CURRENT_APP_NAME
          value: "accounts"
        
        - name: "CH_VERSION"
          value: "0.0.1"
        - name: "CH_CHART_VERSION"
          value: "0.0.1"
        - name: "CH_ACCOUNTS_SUBDOMAIN"
          value: "accounts"
        - name: "CH_ACCOUNTS_NAME"
          value: "accounts"
        - name: "CH_SAMPLES_SUBDOMAIN"
          value: "samples"
        - name: "CH_SAMPLES_PORT"
          value: "80"
        - name: "CH_SAMPLES_NAME"
          value: "samples"
        - name: "CH_DOMAIN"
          value: "ch.local"
        - name: "CH_IMAGE_REGISTRY"
          value: ""
        - name: "CH_IMAGE_TAG"
          value: "latest"
        - name: CH_ACCOUNTS_CLIENT_SECRET
          value: "5678eb6e-9e2c-4ee5-bd54-34e7411339e8"
        - name: CH_ACCOUNTS_REALM
          value: "ch"
        - name: CH_ACCOUNTS_AUTH_DOMAIN
          value: "accounts.ch.local"
        - name: CH_ACCOUNTS_CLIENT_ID
          value: "rest-client"
        - name: DOMAIN
          value: "ch.local"
        
        - name: "CH_SECRET"
          valueFrom:
            secretKeyRef:
              name: deployment-secrets
              key: "CH_SECRET"
        - name: KEYCLOAK_IMPORT
          value: /tmp/realm.json
        - name: KEYCLOAK_USER
          value: admin
        - name: KEYCLOAK_PASSWORD
          value: metacell
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: DB_VENDOR
          value: POSTGRES
        - name: DB_ADDR
          value: keycloak-postgres
        - name: DB_DATABASE
          value: auth_db
        - name: DB_USER
          value: user
        - name: DB_PASSWORD
          value: password
        - name: JAVA_OPTS
          value: -server -Xms64m -Xmx896m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m
            -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman
            -Djava.awt.headless=true  --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED
            --add-exports=jdk.unsupported/sun.reflect=ALL-UNNAMED


        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 0


        ports:
          - containerPort: 8080
        resources:
          requests:
            memory: 512Mi
            cpu: 10m
          limits:
            memory: 1024Mi
            cpu: 500m

        volumeMounts:
          - name: cloudharness-allvalues
            mountPath: /opt/cloudharness/resources
            readOnly: true
          - name: cloudharness-kc-accounts
            mountPath: /opt/cloudharness/resources/auth
            readOnly: true
          - name: "accounts-realm-config"
            mountPath: /tmp/realm.json
            subPath: realm.json
            readOnly: true
          - name: secrets
            mountPath: "/opt/cloudharness/resources/secrets"
            readOnly: true
      volumes:
        - name: cloudharness-allvalues
          configMap:
            name: cloudharness-allvalues
        - name: cloudharness-kc-accounts
          secret:
            secretName: accounts
        
        - name: "accounts-realm-config"
          configMap:
            name: "accounts-realm-config"
        - name: secrets
          secret:
            secretName: accounts
---
# Source: cloudharness/templates/auto-deployments.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "samples"
  namespace: ch
  labels:
    app: "samples"    
    chart: cloudharness-0.0.1
    release: "RELEASE-NAME"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "samples"      
      chart: cloudharness-0.0.1
      release: "RELEASE-NAME"
      heritage: "Helm"
  template:
    metadata:
      labels:
        app: "samples"        
        chart: cloudharness-0.0.1
        release: "RELEASE-NAME"
        heritage: "Helm"
    spec:
      containers:
      - name: "samples"
        image: cloudharness/samples:latest
        imagePullPolicy: Never
        env:
        - name: CH_CURRENT_APP_NAME
          value: "samples"
        
        - name: "CH_VERSION"
          value: "0.0.1"
        - name: "CH_CHART_VERSION"
          value: "0.0.1"
        - name: "CH_ACCOUNTS_SUBDOMAIN"
          value: "accounts"
        - name: "CH_ACCOUNTS_NAME"
          value: "accounts"
        - name: "CH_SAMPLES_SUBDOMAIN"
          value: "samples"
        - name: "CH_SAMPLES_PORT"
          value: "80"
        - name: "CH_SAMPLES_NAME"
          value: "samples"
        - name: "CH_DOMAIN"
          value: "ch.local"
        - name: "CH_IMAGE_REGISTRY"
          value: ""
        - name: "CH_IMAGE_TAG"
          value: "latest"
        - name: CH_ACCOUNTS_CLIENT_SECRET
          value: "5678eb6e-9e2c-4ee5-bd54-34e7411339e8"
        - name: CH_ACCOUNTS_REALM
          value: "ch"
        - name: CH_ACCOUNTS_AUTH_DOMAIN
          value: "accounts.ch.local"
        - name: CH_ACCOUNTS_CLIENT_ID
          value: "rest-client"
        - name: DOMAIN
          value: "ch.local"
        
        - name: "CH_SECRET"
          valueFrom:
            secretKeyRef:
              name: deployment-secrets
              key: "CH_SECRET"
        - name: WORKERS
          value: "3"



        ports:
          - containerPort: 8080
        resources:
          requests:
            memory: 32Mi
            cpu: 10m
          limits:
            memory: 500Mi
            cpu: 500m

        volumeMounts:
          - name: cloudharness-allvalues
            mountPath: /opt/cloudharness/resources
            readOnly: true
          - name: "samples-my-config"
            mountPath: /tmp/resources/myConfig.json
            subPath: myConfig.json
            readOnly: true
          - name: "samples-example"
            mountPath: /usr/src/app/important_config.yaml
            subPath: important_config.yaml
            readOnly: true
      volumes:
        - name: cloudharness-allvalues
          configMap:
            name: cloudharness-allvalues
        
        - name: "samples-my-config"
          configMap:
            name: "samples-my-config"
        - name: "samples-example"
          configMap:
            name: "samples-example"
---
# Source: cloudharness/templates/auto-gatekeepers.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "samples-gk"
  labels:
    app: "samples-gk"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "samples-gk"
  template:
    metadata:
      labels:
        app: "samples-gk"
    spec:
      
      
      hostAliases:
        - ip: 172.19.122.148
          hostnames:
          - ch.local
          - accounts.ch.local
          - samples.ch.local
      containers:
      - name: "samples"
        image: "quay.io/gogatekeeper/gatekeeper:1.3.8"
        imagePullPolicy: IfNotPresent
        
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 0
        env:
        - name: PROXY_CONFIG_FILE
          value: /opt/proxy.yml
        volumeMounts:
        - name: "samples-gk-proxy-config"
          mountPath: /opt/proxy.yml
          subPath: proxy.yml
        - name: "samples-gk-proxy-config"
          mountPath: /etc/pki/ca-trust/source/anchors/cacert.crt
          subPath: cacert.crt
        - name: "samples-gk-proxy-config"
          mountPath: /templates/access-denied.html.tmpl
          subPath: access-denied.html.tmpl
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
      volumes:
      - name: "samples-gk-proxy-config"
        configMap:
          name: "samples-gk"
---
# Source: cloudharness/templates/auto-database.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "keycloak-postgres-backup"
spec:
  schedule: "*/5 * * * *"
  jobTemplate:
    spec:

      template:
        metadata:
          labels:
            name: "keycloak-postgres-backup"
            service: db
        spec:
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: service
                        operator: In
                        values:
                          - db
                  topologyKey: kubernetes.io/hostname
          containers:
            - name: "keycloak-postgres-backup"
              imagePullPolicy: IfNotPresent
              image: prodrigestivill/postgres-backup-local
              command: ["/bin/bash"]
              args: ["-c" , "./backup.sh"]
              env:
                - name: POSTGRES_HOST
                  value: "keycloak-postgres"
                - name: POSTGRES_DB
                  value: "auth_db"
                - name: POSTGRES_USER
                  value: "user"
                - name: POSTGRES_PASSWORD
                  value: "password"
                - name: SCHEDULE
                  value: "*/5 * * * *"
                - name: BACKUP_KEEP_DAYS
                  value: "7"
                - name: BACKUP_KEEP_WEEKS
                  value: "4"
                - name: BACKUP_KEEP_MONTHS
                  value: "6"
                - name: BACKUP_SUFFIX
                  value: ".gz"
                - name: BACKUP_DIR
                  value: "/backups/postgres/keycloak-postgres"
              volumeMounts:
                - name: "db-backups"
                  mountPath: "/backups/postgres/keycloak-postgres"
                  readOnly: false
              resources:
                requests:
                  memory: 32Mi
                  cpu: 25m
                limits:
                  memory: 64Mi
                  cpu: 50m
          restartPolicy: OnFailure
          volumes:
            - name: "db-backups"
              persistentVolumeClaim:
                claimName: "db-backups"
---
# Source: cloudharness/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "cloudharness-ingress"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: '250m'
    nginx.ingress.kubernetes.io/proxy-buffer-size: '128k'
    nginx.ingress.kubernetes.io/from-to-www-redirect: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - host: "ch.local"
    
  
  
    http:
      paths:
      - path: /(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: accounts
            port:
              number: 8080
  - host: "accounts.ch.local"
    
  
  
    http:
      paths:
      - path: /(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: accounts
            port:
              number: 8080
  - host: "samples.ch.local"
    
  
  
    http:
      paths:
      - path: /(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: samples-gk
            port:
              number: 8080
---
# Source: cloudharness/templates/auto-secrets.yaml
---
