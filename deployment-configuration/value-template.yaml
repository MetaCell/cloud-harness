harness:
  # -- If specified, an ingress will be created at [subdomain].[.Values.domain]
  subdomain:
  # -- If specified, an ingress will be created at [alias].[.Values.domain] for each alias
  aliases: []
  # -- If specified, an ingress will be created at [domain]
  domain:
  # -- Application dependencies are used to define what is required in the deployment when --include (-i) is used. Specify application names in the list.
  dependencies:
    # -- Hard dependencies indicate that the application may not start without these other applications.
    hard: []
    # -- Soft dependencies indicate that the application will work partially without these other applications.
    soft: []
    # -- Build dependencies indicate that the application Docker image build requires these base/common images
    build: []
  # -- When true, the application is shielded with a getekeeper
  secured: false
  # -- Uri/Role mapping for the gatekeeper
  uri_role_mapping:
    - uri: /*
      roles:
        - administrator
    - uri: /api/openapi.json
      white-listed: true
    - uri: /openapi.json
      white-listed: true
  # -- Defines reference deployment parameters. Values maps to k8s spec
  deployment:
    # -- When true, enables automatic deployment
    auto: false
    # -- Number of pod replicas for the deployment.
    replicas: 1
    # -- Docker image url. Leave blank to leave Cloudharness automatic image name assignment.
    image:
    # -- Deployment name. Leave blank to leave Cloudharness automatic image name assignment.
    name:
    # -- Deployment port.
    port: 8080
    # -- volume specification
    volume:
    # -- Deployment resources.
    resources:
      requests:
        memory: "32Mi"
        cpu: "10m"
      limits:
        memory: "500Mi"
        cpu: "500m"
  # -- Defines automatic service parameters.
  service:
    # -- When true, enables automatic service
    auto: true
    # -- Service name. Leave blank to leave Cloudharness automatic image name assignment.
    name:
    # -- Service port.
    port: 80
  # -- Auto generated secrets key-value pairs. If no value is provided, a random hash is generated
  secrets: {}
  # -- Specify which services this application uses in the frontend to create proxy ingresses. e.g. - name: mnp-checkout
  use_services: []
  # -- enabled sentry for automated error report
  sentry: false
  # -- Reference database specs
  database:
    # -- When true, enables automatic database deployment
    auto: false
    # -- Database deployment name. Leave blank to leave Cloudharness automatic image name assignment.
    name:
    # -- supported db types: mongo, postgres, neo4j
    type:
    size: 1Gi
    # -- database username
    user: mnp
    # -- database password
    pass: metacell
    # -- image ref for referencing images from the build, e.g. image_ref: myownpgimage
    image_ref:
    # -- expose database to the public with ingress
    expose: false
    # -- settings for mongo database (for type==mongo)
    mongo:
      image: mongo:5
      ports:
        - name: http
          port: 27017
    # -- settings for postgers database (for type==postgres)
    postgres:
      image: postgres:13
      initialdb: cloudharness
      ports:
        - name: http
          port: 5432
    # -- settings for neo4j database (for type==neo4j)
    neo4j:
      image: neo4j:4.1.9
      memory:
        size: 256M
        pagecache:
          size: 64M
        heap:
          initial: 64M
          max: 128M
      dbms_security_auth_enabled: "false"
      ports:
        - name: http
          port: 7474
        - name: bolt
          port: 7687
    # -- database deployment resources
    resources:
      requests:
        memory: "512Mi"
        cpu: "100m"
      limits:
        memory: "2Gi"
        cpu: "1000m"
  test:
    unit:
      enabled: true
      commands: []
    api:
      enabled: false
      autotest: true
      runParams: []
      checks:
        - all
    e2e:
      enabled: false
      smoketest: true
      ignoreConsoleErrors: false
      ignoreRequestErrors: false
  proxy:
    timeout:
      # -- Timeout for proxy connections in seconds.
      send:
      # -- Timeout for proxy responses in seconds.
      read:
      keepalive:
    payload:
      # -- Maximum size of payload in MB
      max:
