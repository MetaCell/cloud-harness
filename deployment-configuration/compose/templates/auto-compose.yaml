version: '3.7'

services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    networks:
    - ch
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certs/:/certs/:ro"
      - "./traefik.yaml:/etc/traefik/dynamic_conf/conf.yml:ro"

{{- range $app_name, $app_config := .Values.apps }}
  {{ $deployment :=  $app_config.harness.deployment }}
  {{- if eq $app_name "nfsserver" }}
  {{- include "events.deployment" $.Values | indent 2 }}
  {{- end }}
  {{- if or (not $deployment.auto) (not $app_config.harness.service.auto) }}
  {{- continue }}
  {{- end}}
  {{ $app_name }}:
    {{- with $app_config.domain }}
    domainname: {{ . }}
    {{- end }}
    networks:
      {{- if ne $app_config.harness.service.name $app_name}}
      ch:
        aliases:
          - {{ $app_config.harness.service.name }}
      {{- else }}
      - ch
      {{- end}}
    {{- with $app_config.image }}
    image: {{ . }}
    {{- end }}
    {{- if eq $.Values.mainapp $app_name }}
    {{- with $app_config.harness.service.port }}
    ports:
      - "{{ . }}:{{ $app_config.harness.deployment.port }}"
    {{- end }}
    {{- end }}
    {{- with $app_config.harness.deployment.port }}
    expose:
      - {{ . | quote }}
    {{- end}}
    deploy:
      mode: "replicated"
      replicas: {{ $deployment.replicas | default 1 }}
      resources:
        limits:
          cpus: {{ $deployment.resources.limits.cpu | default "50m" }}
          memory: {{ trimSuffix "i" $deployment.resources.limits.memory | default "64M" }}
        reservations:
          cpus: {{ $deployment.resources.requests.cpu | default "25m" }}
          memory: {{ trimSuffix "i" $deployment.resources.requests.memory | default "32M" }}
    {{- with $deployment.command }}
    # entrypoint: {{ cat . $deployment.args }}
    {{- end }}
    environment:
      - CH_CURRENT_APP_NAME={{ $app_name }}

      {{- range $.Values.env }}
      - {{ .name }}={{ .value }}
      {{- end }}
      {{- /*{{- range $.Values.env }}
      - {{ .name }}={{ .value }}
      {{- end }} */}}
      {{- range $app_config.harness.env }}
      - {{ .name }}={{ .value }}
      {{- end }}
    {{- with $app_config.harness.dependencies.soft }}
    links:
      {{- range . }}
      {{- $service_name := (get $.Values.apps .).harness.service.name }}
      - {{ . }}:{{ $service_name }}.{{ $.Values.domain }}
      {{- end }}
    {{- end }}
    {{- with $app_config.harness.dependencies.hard }}
    depends_on:
      {{- range . }}
      - {{ . }}
      {{- end }}
    {{- end }}
    volumes:
      - ./compose/allvalues.yaml:/opt/cloudharness/resources/allvalues.yaml:ro
    {{- if or $deployment.volume $app_config.harness.resources }}
    {{- with $deployment.volume }}
      - type: volume
        source: {{ .name }}
        target: {{ .mountpath }}
    {{- end}}
    {{- with $app_config.harness.resources }}
    {{- range .}}
      - type: bind
        source: compose/resources/{{ $app_name }}/{{.src }}
        target: {{ .dst }}
    {{- end }}
    {{- end}}
    {{- end }}
  {{- with $app_config.harness.database }}
    {{- if not .auto }}
    {{- continue}}
    {{- end }}
  {{- include "db.deployment" . | indent 2}}
  {{- end}}
{{- end }}

# Network definition
networks:
  ch:
    name: ch_network

volumes:  # this inclusion needs to be conditional
{{- range $app_name, $app_config := .Values.apps }}
  {{- with $app_config.harness.deployment.volume }}
  {{ .name }}:
  {{- end }}
  {{- with $app_config.harness.database }}
  {{ .name }}:
  {{- if eq .type "postgres" }}
  dshm:
  {{- end }}
  {{- end }}
{{- end }}