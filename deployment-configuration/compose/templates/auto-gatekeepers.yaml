{{/* Secured Services/Deployments */}}
{{- define "securedservice.deploy" }}
{{- $tls := not (not .root.Values.tls) }}
{{- $gk_name := printf "%s-gk" .app.harness.service.name }}
{{ $gk_name }}:
  networks:
  - ch
  restart: always
  image: quay.io/gogatekeeper/gatekeeper:1.3.8
  expose:
    - '8080'
    - '8443'
  deploy:
    mode: replicated
    replicas: 1
    resources:
      limits:
        cpus: 0.1
        memory: 64M
      reservations:
        cpus: 0.001
        memory: 32M
  environment:
    - PROXY_CONFIG_FILE=/opt/proxy.yml
  volumes:
    - ./compose/resources/generated/{{ $gk_name }}/proxy.yml:/opt/proxy.yml
    - ./compose/resources/generated/{{ $gk_name }}/cacert.crt:/etc/pki/ca-trust/source/anchors/cacert.crt
    - ./compose/resources/generated/{{ $gk_name }}/access-denied.html.tmpl:/templates/access-denied.html.tmpl
  labels:
    - "traefik.enable=true"
    - "traefik.http.services.{{ $gk_name }}.loadbalancer.server.port={{ .app.harness.service.port }}"
    - "traefik.http.routers.gatekeeper.middlewares=redirect-middleware"
    - "traefik.http.routers.{{ $gk_name }}.rule=Host(`{{ .app.harness.subdomain }}.{{ .root.Values.domain }}`)"
    - "traefik.http.routers.{{ $gk_name }}.entrypoints=web"
  depends_on:
    accounts:
      condition: service_healthy
  links:
    - traefik:accounts.{{ .root.Values.domain }}
    - {{ .app.harness.service.name }}:{{ .app.harness.service.name }}.default
{{- end }}

{{- define "securedservice.deploy.resources" }}
{{- $tls := not (not .root.Values.tls) }}
cloudharness-metadata:
  path: resources/generated/{{ .app.harness.service.name }}-gk/proxy.yml

data: |-
    verbose: {{ .root.Values.debug }}
    discovery-url: {{ ternary "https" "http" $tls}}://{{ .root.Values.apps.accounts.harness.subdomain }}.{{ .root.Values.domain }}/auth/realms/{{ .root.Values.namespace }}
    client-id: {{ .root.Values.apps.accounts.webclient.id | quote }}
    client-secret: {{ .root.Values.apps.accounts.webclient.secret }}
    secure-cookie: {{ $tls }}
    forbidden-page: /templates/access-denied.html.tmpl
    enable-default-deny:  {{ eq (.app.harness.secured | toString) "true" }}
    listen: 0.0.0.0:8080
    enable-refresh-tokens: true
    server-write-timeout: {{ .app.harness.proxy.timeout.send | default .root.Values.proxy.timeout.send | default 180 }}s
    upstream-timeout: {{ .app.harness.proxy.timeout.read | default .root.Values.proxy.timeout.read | default 180 }}s
    upstream-response-header-timeout:   {{ .app.harness.proxy.timeout.read | default .root.Values.proxy.timeout.read | default 180 }}s
    upstream-expect-continue-timeout:  {{ .app.harness.proxy.timeout.read | default .root.Values.proxy.timeout.read | default 180 }}s
    server-read-timeout:  {{ .app.harness.proxy.timeout.read | default .root.Values.proxy.timeout.read | default 180 }}s
    upstream-keepalive-timeout:  {{ .app.harness.proxy.timeout.keepalive | default .root.Values.proxy.timeout.keepalive | default 180 }}s
    http-only-cookie: false
    tls-cert:
    tls-private-key:
    redirection-url: {{ ternary "https" "http" $tls }}://{{ .app.harness.subdomain }}.{{ .root.Values.domain }}
    encryption-key: AgXa7xRcoClDEU0ZDSH4X0XhL5Qy2Z2j
    upstream-url: http://{{ .app.harness.service.name }}.{{ .app.namespace | default .root.Release.Namespace }}:{{ .app.harness.service.port | default 80}}
    {{ if .app.harness.secured }}
      {{ with .app.harness.uri_role_mapping }}
    resources:
    {{. | toYaml | nindent 4 }}
      {{- end }}
    {{- end }}
    {{ if or .root.Values.local (not $tls) }}
    skip-openid-provider-tls-verify: true
    skip-upstream-tls-verify: true
    {{- end }}
---
cloudharness-metadata:
  path: resources/generated/{{ .app.harness.service.name }}-gk/cacert.crt

data: |-
{{ .files.Get "resources/certs/cacert.crt" | indent 2 }}
---
cloudharness-metadata:
  path: resources/generated/{{ .app.harness.service.name }}-gk/access-denied.html.tmpl

data: |-
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="UTF-8">
      <title>403 - Access Forbidden</title>
      <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
      <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
      <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
      <style>
        .oops {
          font-size: 9em;
          letter-spacing: 2px;
        }
        .message {
          font-size: 3em;
        }
      </style>
    </head>
    <body>
      <div class="container text-center">
        <div class="row vcenter" style="margin-top: 20%;">
          <div class="col-md-12">
            <div class="error-template">
              <h1 class="oops">Oops!</h1>
              <h2 class="message">403 Permission Denied</h2>
              <div class="error-details">
                Sorry, you do not have access to this page, please contact your administrator.
                If you have been assigned new authorizations, try to refresh the page or to <a href="/oauth/logout?redirect=/">login again</a>.
              </div>
            </div>
          </div>
        </div>
    </div>

    </body>
    </html>
---
{{- end }}

{{- if .Values.secured_gatekeepers }}
{{ $files := .Files }}
{{- range $app := .Values.apps }}
  {{- if and (hasKey $app "port") ($app.harness.secured)   }}
    {{ include "securedservice.deploy.resources" (dict "root" $ "app" $app "files" $files) }}
  {{- end }}
  {{- range $subapp := $app }}
  {{- if contains "map" (typeOf $subapp)  }}
    {{- if and (hasKey $subapp "harness.port") (hasKey $subapp "harness.secured") }}
      {{- if $subapp.harness.secured }}
      {{ include "securedservice.deploy.resources" (dict "root" $ "app" $subapp "files" $files) }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
 {{- end }}
{{- end }}
