# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from common.models.base_model_ import Model
from common import util


class AppVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build=None, tag=None):  # noqa: E501
        """AppVersion - a model defined in OpenAPI

        :param build: The build of this AppVersion.  # noqa: E501
        :type build: str
        :param tag: The tag of this AppVersion.  # noqa: E501
        :type tag: str
        """
        self.openapi_types = {
            'build': str,
            'tag': str
        }

        self.attribute_map = {
            'build': 'build',
            'tag': 'tag'
        }

        self._build = build
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt) -> 'AppVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppVersion of this AppVersion.  # noqa: E501
        :rtype: AppVersion
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build(self):
        """Gets the build of this AppVersion.


        :return: The build of this AppVersion.
        :rtype: str
        """
        return self._build

    @build.setter
    def build(self, build):
        """Sets the build of this AppVersion.


        :param build: The build of this AppVersion.
        :type build: str
        """

        self._build = build

    @property
    def tag(self):
        """Gets the tag of this AppVersion.


        :return: The tag of this AppVersion.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this AppVersion.


        :param tag: The tag of this AppVersion.
        :type tag: str
        """

        self._tag = tag
