# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from workflows_api.models.base_model_ import Model
from workflows_api import util


class SearchResultData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, continue_token=None):  # noqa: E501
        """SearchResultData - a model defined in OpenAPI

        :param continue_token: The continue_token of this SearchResultData.  # noqa: E501
        :type continue_token: str
        """
        self.openapi_types = {
            'continue_token': str
        }

        self.attribute_map = {
            'continue_token': 'continueToken'
        }

        self._continue_token = continue_token

    @classmethod
    def from_dict(cls, dikt) -> 'SearchResultData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SearchResultData of this SearchResultData.  # noqa: E501
        :rtype: SearchResultData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def continue_token(self):
        """Gets the continue_token of this SearchResultData.

        token to use for pagination  # noqa: E501

        :return: The continue_token of this SearchResultData.
        :rtype: str
        """
        return self._continue_token

    @continue_token.setter
    def continue_token(self, continue_token):
        """Sets the continue_token of this SearchResultData.

        token to use for pagination  # noqa: E501

        :param continue_token: The continue_token of this SearchResultData.
        :type continue_token: str
        """

        self._continue_token = continue_token
