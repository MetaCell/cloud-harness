{{- if not .Values.apps.jupyterhub.hub.existingSecret }}
kind: Secret
apiVersion: v1
metadata:
  name: hub-secret
  labels:
    {{- include "jupyterhub.labels" . | nindent 4 }}
type: Opaque
data:
  proxy.token: {{ (required "Proxy token must be a 32 byte random string generated with `openssl rand -hex 32`!" .Values.apps.jupyterhub.proxy.secretToken) | b64enc | quote }}
  {{- if .Values.apps.jupyterhub.hub.cookieSecret }}
  hub.cookie-secret: {{ .Values.apps.jupyterhub.hub.cookieSecret | b64enc | quote }}
  {{- end }}
  {{- if .Values.apps.jupyterhub.hub.db.password }}
  hub.db.password: {{ .Values.apps.jupyterhub.hub.db.password | b64enc | quote }}
  {{- end }}
  {{- if .Values.apps.jupyterhub.auth.state.enabled }}
  auth.state.crypto-key: {{ (required "Encryption key is required for auth state to be persisted!" .Values.apps.jupyterhub.auth.state.cryptoKey) | b64enc | quote }}
  {{- end }}
  {{- $values := dict "hub" dict }}
  {{- /* pluck only needed secret values, preserving .Values.apps.jupyterhub.yaml structure */ -}}
  {{- $_ := set $values "auth" dict }}
  {{- range $key, $auth := .Values.apps.jupyterhub.auth }}
    {{- if typeIs "map[string]interface {}" $auth }}
      {{- if (or $auth.clientSecret $auth.password) }}
        {{- $_ := set $.Values.apps.jupyterhub.auth $key (pick $auth "clientSecret" "password") }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- $_ := set $.Values.apps.jupyterhub.hub "services" dict }}
  {{- range $key, $service := .Values.apps.jupyterhub.hub.services }}
    {{- if $service.apiToken }}
      {{- $_ := set $.Values.apps.jupyterhub.hub.services $key (pick $service "apiToken") }}
    {{- end }}
  {{- end }}
  .Values.apps.jupyterhub.yaml: {{ $values | toYaml | b64enc | quote }}
{{- end }}
