# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from samples.models.base_model_ import Model
from samples import util


class SampleResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, a=None, b=None):  # noqa: E501
        """SampleResource - a model defined in OpenAPI

        :param a: The a of this SampleResource.  # noqa: E501
        :type a: float
        :param b: The b of this SampleResource.  # noqa: E501
        :type b: float
        """
        self.openapi_types = {
            'a': float,
            'b': float
        }

        self.attribute_map = {
            'a': 'a',
            'b': 'b'
        }

        self._a = a
        self._b = b

    @classmethod
    def from_dict(cls, dikt) -> 'SampleResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SampleResource of this SampleResource.  # noqa: E501
        :rtype: SampleResource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def a(self):
        """Gets the a of this SampleResource.


        :return: The a of this SampleResource.
        :rtype: float
        """
        return self._a

    @a.setter
    def a(self, a):
        """Sets the a of this SampleResource.


        :param a: The a of this SampleResource.
        :type a: float
        """
        if a is None:
            raise ValueError("Invalid value for `a`, must not be `None`")  # noqa: E501

        self._a = a

    @property
    def b(self):
        """Gets the b of this SampleResource.


        :return: The b of this SampleResource.
        :rtype: float
        """
        return self._b

    @b.setter
    def b(self, b):
        """Sets the b of this SampleResource.


        :param b: The b of this SampleResource.
        :type b: float
        """

        self._b = b
