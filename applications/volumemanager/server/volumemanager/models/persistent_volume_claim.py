# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from volumemanager.models.base_model_ import Model
from volumemanager import util


class PersistentVolumeClaim(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, namespace=None, accessmode=None, size=None):  # noqa: E501
        """PersistentVolumeClaim - a model defined in OpenAPI

        :param name: The name of this PersistentVolumeClaim.  # noqa: E501
        :type name: str
        :param namespace: The namespace of this PersistentVolumeClaim.  # noqa: E501
        :type namespace: str
        :param accessmode: The accessmode of this PersistentVolumeClaim.  # noqa: E501
        :type accessmode: str
        :param size: The size of this PersistentVolumeClaim.  # noqa: E501
        :type size: str
        """
        self.openapi_types = {
            'name': str,
            'namespace': str,
            'accessmode': str,
            'size': str
        }

        self.attribute_map = {
            'name': 'name',
            'namespace': 'namespace',
            'accessmode': 'accessmode',
            'size': 'size'
        }

        self._name = name
        self._namespace = namespace
        self._accessmode = accessmode
        self._size = size

    @classmethod
    def from_dict(cls, dikt) -> 'PersistentVolumeClaim':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PersistentVolumeClaim of this PersistentVolumeClaim.  # noqa: E501
        :rtype: PersistentVolumeClaim
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PersistentVolumeClaim.

        Unique name for the Persisten Volume Claim  # noqa: E501

        :return: The name of this PersistentVolumeClaim.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PersistentVolumeClaim.

        Unique name for the Persisten Volume Claim  # noqa: E501

        :param name: The name of this PersistentVolumeClaim.
        :type name: str
        """

        self._name = name

    @property
    def namespace(self):
        """Gets the namespace of this PersistentVolumeClaim.

        The namespace where the Persistent Volume Claim resides in  # noqa: E501

        :return: The namespace of this PersistentVolumeClaim.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this PersistentVolumeClaim.

        The namespace where the Persistent Volume Claim resides in  # noqa: E501

        :param namespace: The namespace of this PersistentVolumeClaim.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def accessmode(self):
        """Gets the accessmode of this PersistentVolumeClaim.

        The accessmode of the Persistent Volume Claim  # noqa: E501

        :return: The accessmode of this PersistentVolumeClaim.
        :rtype: str
        """
        return self._accessmode

    @accessmode.setter
    def accessmode(self, accessmode):
        """Sets the accessmode of this PersistentVolumeClaim.

        The accessmode of the Persistent Volume Claim  # noqa: E501

        :param accessmode: The accessmode of this PersistentVolumeClaim.
        :type accessmode: str
        """

        self._accessmode = accessmode

    @property
    def size(self):
        """Gets the size of this PersistentVolumeClaim.

        The size of the Persistent Volume Claim.  # noqa: E501

        :return: The size of this PersistentVolumeClaim.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this PersistentVolumeClaim.

        The size of the Persistent Volume Claim.  # noqa: E501

        :param size: The size of this PersistentVolumeClaim.
        :type size: str
        """

        self._size = size
