{{- define "deploy_utils.secret" }}
{{- if .app.harness.secrets }}
{{- $secret_name := printf "%s" .app.harness.deployment.name }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secret_name }}
  namespace: {{ .root.Values.namespace }}
  labels:
    app: {{ .app.harness.deployment.name }}
type: Opaque
  {{- $secret := (lookup "v1" "Secret" .root.Values.namespace $secret_name) }}
  {{- if $secret }}
data:
  # secret exists copy the values
    {{- range $k, $v := $secret.data }}
  {{ $k }}: {{ $v }}
    {{- end }}
  {{- else }}
  # create new secret
stringData:
    {{- .app.harness.secrets | toYaml | nindent 4 }}
  {{- end }}
{{- end }}
---
{{- end }}
---
{{- range $app := .Values.apps }}
---
  {{- include "deploy_utils.secret" (dict "root" $ "app" $app) }}
  {{- range $subapp := $app }}
  {{- if contains "map" (typeOf $subapp)  }}
    {{- if hasKey $subapp "harness" }}
---
      {{- include "deploy_utils.secret" (dict "root" $ "app" $subapp) }}
    {{- end }}
  {{- end }}
  {{- end }}
{{- end }}