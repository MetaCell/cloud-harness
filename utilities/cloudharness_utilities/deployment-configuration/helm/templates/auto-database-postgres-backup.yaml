{{ define "deploy_utils.database.postgres.backup"}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{ .app.harness.database.name }}-backup"
spec:
  schedule: {{ .root.Values.backup.schedule | quote }}
  jobTemplate:
    spec:
      template:
        spec:
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          containers:
            - name: "{{ .app.harness.database.name }}-backup"
              imagePullPolicy: IfNotPresent
              image: prodrigestivill/postgres-backup-local
              command: ["/bin/sh"]
              args: ["-c" , "./backup.sh"]
              env:
                - name: POSTGRES_HOST
                  value: {{ .app.harness.database.name | quote }}
                - name: POSTGRES_DB
                  value: {{ (index .app.harness.database .app.harness.database.type).initialdb | quote }}
                - name: POSTGRES_USER
                  value: {{ .app.harness.database.user | quote }}
                - name: POSTGRES_PASSWORD
                  value: {{ .app.harness.database.pass | quote }}
                - name: SCHEDULE
                  value: {{ .root.Values.backup.schedule | quote }}
                - name: BACKUP_KEEP_DAYS
                  value: {{ .root.Values.backup.keep_days | quote }}
                - name: BACKUP_KEEP_WEEKS
                  value: {{ .root.Values.backup.keep_weeks |quote }}
                - name: BACKUP_KEEP_MONTHS
                  value: {{ .root.Values.backup.keep_months | quote }}
                - name: BACKUP_SUFFIX
                  value: {{ .root.Values.backup.suffix | quote }}
                - name: BACKUP_DIR
                  value: {{ .root.Values.backup.dir | quote }}
              volumeMounts:
                - name: "{{ .app.harness.database.name }}-backup"
                  mountPath: /backups
              resources:
                requests:
                  memory: {{ .app.harness.database.backup.resources.requests.memory | default "32Mi" }}
                  cpu: {{ .app.harness.database.backup.resources.requests.cpu | default "25Mi" }}
                limits:
                  memory: {{ .app.harness.database.backup.resources.limits.memory | default "64Mi" }}
                  cpu: {{ .app.harness.database.backup.resources.limits.cpu | default "50mi" }}
          restartPolicy: OnFailure
          volumes:
            - name: "{{ .app.harness.database.name }}-backup"
              persistentVolumeClaim:
                claimName: "{{ .app.harness.database.name }}-backup"
{{ end }}