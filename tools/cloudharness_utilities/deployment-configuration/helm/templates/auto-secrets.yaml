{{- define "deploy_utils.secret" }}
{{- if .app.harness.secrets }}
{{- $secret_name := printf "%s" .app.harness.deployment.name }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secret_name }}
  namespace: {{ .root.Values.namespace }}
  labels:
    app: {{ .app.harness.deployment.name }}
type: Opaque
  {{- $secret := (lookup "v1" "Secret" .root.Values.namespace $secret_name) }}
  {{- if $secret }}
# secret already exists
    {{- if not (compact (values .app.harness.secrets)) }}
# secret values are null, copy from the existing secret
data:
      {{- range $k, $v := $secret.data }}
  {{ $k }}: {{ $v }}
      {{- end }}
    {{- else }}
# there are non default values in values.yaml, use these
stringData:
      {{- range $k, $v := .app.harness.secrets }}
  {{ $k }}: {{ $v | default "ChangeMe!" }}
      {{- end }}
    {{- end }}
  {{- else }}
# secret doesn't exist
stringData:
    {{- range $k, $v := .app.harness.secrets }}
  {{ $k }}: {{ $v | default "ChangeMe!" }}
    {{- end }}
  {{- end }}
{{- end }}
---
{{- end }}
---
{{- range $app := .Values.apps }}
---
  {{- include "deploy_utils.secret" (dict "root" $ "app" $app) }}
  {{- range $subapp := $app }}
  {{- if contains "map" (typeOf $subapp)  }}
    {{- if hasKey $subapp "harness" }}
---
      {{- include "deploy_utils.secret" (dict "root" $ "app" $subapp) }}
    {{- end }}
  {{- end }}
  {{- end }}
{{- end }}