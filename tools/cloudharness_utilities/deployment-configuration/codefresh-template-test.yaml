version: "1.0"
stages:
  - prepare
  - build
  - unittest
  - deploy
  - qa
steps:
  main_clone:
    title: Clone main repository
    type: git-clone
    stage: prepare
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_BRANCH}}"
    git: github
  post_main_clone:
    title: Post main clone
    type: parallel
    stage: prepare
    steps:
      - title: Cloning cloud-harness repository...
        type: git-clone
        stage: prepare
        repo: "https://github.com/MetaCell/cloud-harness.git"
        revision: "${{CLOUDHARNESS_BRANCH}}"
        working_directory: .
        git: github
  prepare_deployment:
    title: "Prepare helm chart"
    image: python:3.9.10
    stage: prepare
    working_directory: .
    commands:
      - bash cloud-harness/install.sh
      - harness-deployment cloud-harness . -n test-${{CF_REPO_NAME}}-${{CF_SHORT_REVISION}} $INCLUDE -t ${{CF_BUILD_ID}} -d ${{CF_SHORT_REVISION}}.${{DOMAIN}} -r ${{REGISTRY}} -rs ${{REGISTRY_SECRET}} -e $ENV
  prepare_deployment_view:
    commands:
      - "helm template ./deployment/helm --debug -n test-${{CF_REPO_NAME}}-${{CF_SHORT_REVISION}}"
    environment:
      - ACTION=auth
      - KUBE_CONTEXT=test-${{CF_BUILD_ID}}
    image: codefresh/cfstep-helm:3.6.2
    stage: prepare
    title: "View helm chart"
  build_base_images:
    title: Build base images
    type: parallel
    stage: build
    steps: {}
  build_static_images:
    title: Build static images
    type: parallel
    stage: build
    steps: {}
  build_application_images:
    type: parallel
    stage: build
    steps: {}
  tests_unit:
    stage: unittest
    type: parallel
    steps: {}
  prepare_cluster:
    stage: deploy
    image: codefresh/kubectl
    fail_fast: false
    commands:
      - kubectl config use-context ${{CLUSTER_NAME}}
      - kubectl create ns test-${{CF_REPO_NAME}}-${{CF_SHORT_REVISION}}
  deployment:
    stage: deploy
    type: helm
    working_directory: ./${{CF_REPO_NAME}}
    title: Installing chart
    arguments:
      helm_version: 3.6.2
      chart_name: deployment/helm
      release_name: test-${{CF_REPO_NAME}}-${{CF_SHORT_REVISION}}
      kube_context: ${{CLUSTER_NAME}}
      namespace: test-${{CF_REPO_NAME}}-${{CF_SHORT_REVISION}}
      chart_version: ${{CF_BUILD_ID}}
      cmd_ps: --wait --timeout 600s
      custom_value_files:
        - ./deployment/helm/values.yaml
  wait_deployment:
    stage: qa
    title: Wait deployment to be ready
    image: codefresh/kubectl
    commands:
      - kubectl config use-context ${{CLUSTER_NAME}}
      - kubectl config set-context --current --namespace=test-${{CF_REPO_NAME}}-${{CF_SHORT_REVISION}}
    hooks:
      on_fail:
        exec:
          image: alpine
          commands:
            - sleep 1800
  tests_api:
    stage: qa
    title: Api tests
    working_directory: /home/test
    image: "${{test-api}}"
    commands:
      - echo $APP_NAME
    scale: {}
    hooks:
      on_fail:
        exec:
          image: alpine
          commands:
            - sleep 1800
  tests_e2e:
    stage: qa
    title: End to end tests
    working_directory: /home/test
    image: "${{test-e2e}}"
    commands:
      - yarn test
    scale: {}
    hooks:
      on_fail:
        exec:
          image: alpine
          commands:
            - sleep 1800
  publish: null

hooks:
  on_finish:
    image: codefresh/kubectl
    commands:
      - kubectl config use-context ${{CLUSTER_NAME}}
      - kubectl delete ns test-${{CF_REPO_NAME}}-${{CF_SHORT_REVISION}}
